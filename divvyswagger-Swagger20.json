{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "DivvyCloud v2 API",
    "description": "DivvyCloud version 2 API documentation. This document is actively being updated. If you are looking for an action not documented here, please send us an email at support@divvycloud.com\n\nDefinitions:\n- Public/Prototype: When the v2 api was started there was a desire to seperate UI specific or internally used endpoints into their own namespaces. All endpoints can be used but we caution use of prototype namespaced api endpoints as documentation and support may vary. Please contact us if you have any questions.\n- X-Auth-Token: Endpoints are authenticated via session token explicitly passed in the header of a request. Sessions can be obtained using the login endpoint. When using the postman runner, logging in will set a session token for the postman environment. User credentials should be set as global postman variables.",
    "contact": {}
  },
  "host": "example.com",
  "basePath": "/v2",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/prototype/cloud/add": {
      "post": {
        "description": "Adding an AWS cloud account to DivvyCloud using AWS access key and AWS secret key. ",
        "summary": "Add AWS Cloud Account",
        "tags": [
          "Add Cloud Account"
        ],
        "operationId": "PrototypeCloudAddPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAWSCloudAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddAWSCloudAccount"
            },
            "examples": {
              "application/json": {
                "status": "REFRESH",
                "group_resource_id": "divvyorganizationservice:18",
                "name": "DivvyCloud Development",
                "resource_id": "divvyorganizationservice:18",
                "cloud_type_id": "AWS",
                "creation_time": "2017-10-25 19:03:50.409391",
                "id": 18
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "234"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 19:03:45 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/user/create": {
      "post": {
        "description": "Create new user",
        "summary": "Create User",
        "tags": [
          "Add User"
        ],
        "operationId": "PublicUserCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            },
            "examples": {
              "application/json": {
                "username": "jamessmith",
                "two_factor_enabled": false,
                "user_id": 7,
                "name": "James Smith",
                "resource_id": "divvyuser:7:",
                "two_factor_required": false,
                "organization_name": "Default Organization",
                "domain_admin": false,
                "email_address": "jamessmith@divvycloud.com",
                "organization_admin": false
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "296"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:37:11 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/insights/create": {
      "post": {
        "description": "Creates new insight.",
        "summary": "Create Insight",
        "tags": [
          "Create Insights"
        ],
        "operationId": "PublicInsightsCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateInsightRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/prototype/resource/{autoscalinggroup_resource_id}/supported_actions/get": {
      "get": {
        "description": "Available Auto scaling Group actions.",
        "summary": "List ASG Supported Actions",
        "tags": [
          "AutoScaling Groups"
        ],
        "operationId": "PrototypeResourceSupportedActionsGetByAutoscalinggroupResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "autoscalinggroup_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListASGSupportedActions"
            },
            "examples": {
              "application/json": {
                "supported_actions": [
                  "detach_instance_from_auto_scaling_group"
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "content-length": {
                "type": "string",
                "default": "78"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 13:43:25 GMT"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/autoscalinggroup/{autoscalinggroup_resource_id}/detach": {
      "post": {
        "description": "Detach single instance from Autoscale Group",
        "summary": "Detach Instance From ASG",
        "tags": [
          "AutoScaling Groups"
        ],
        "operationId": "PublicAutoscalinggroupDetachByAutoscalinggroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetachInstanceFromASGRequest"
            }
          },
          {
            "name": "autoscalinggroup_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/resource/{autoscalinggroup_resource_id}/detail": {
      "get": {
        "description": "Detailed autoscale group metadata. ",
        "summary": "List ASG Details",
        "tags": [
          "AutoScaling Groups"
        ],
        "operationId": "PublicResourceDetailByAutoscalinggroupResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Length",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "autoscalinggroup_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListASGDetails"
            },
            "examples": {
              "application/json": {
                "dependencies": {
                  "instance": [
                    {
                      "id": "i-1234567",
                      "name": "Sample Instance",
                      "resource_id": "instance:1:us-east-1:i-1234567:",
                      "type": "instance"
                    }
                  ],
                  "privatesubnet": [
                    {
                      "id": "subnet-1234567",
                      "name": "subnet-1234567",
                      "resource_id": "privatesubnet:1:us-east-1:subnet-1234567:",
                      "type": "privatesubnet"
                    }
                  ]
                },
                "details": {
                  "autoscalinggroup": {
                    "common": {
                      "account": "Sample Account",
                      "cloud": "GCP",
                      "creation_timestamp": "None",
                      "discovered_timestamp": "2017-10-17 18:45:07",
                      "modified_timestamp": "2017-10-24 20:11:25",
                      "noncompliance": [],
                      "organization_service_id": 1,
                      "properties": {
                        "property_list": []
                      },
                      "region": "us-east-1",
                      "resource_id": "autoscalinggroup:1:us-east-1:Sample-ASG:",
                      "resource_name": "Sample-ASG",
                      "resource_type": "autoscalinggroup"
                    },
                    "create_time": "2017-10-02 15:25:28",
                    "default_cooldown": 0,
                    "desired_capacity": 1,
                    "group_id": "Sample-ASG",
                    "health_check_grace_period": 0,
                    "max_size": 1,
                    "min_size": 0,
                    "new_instance_protection": false
                  },
                  "resource_type": "autoscalinggroup"
                }
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "499"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 13:47:51 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 09:47:51.632193"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/badges/{org_resource_id}/update": {
      "post": {
        "description": "Updating bagdes will only add the k:v pairs that are sent. i.g. if you currently have the following badge `badges: [{'cloud': 'aws'}]`, but in the update request you only send `badges:[{'cloud': 'gcp'}, {'cloud': 'azure'}]`,  `'cloud': 'aws'` will be removed and the other two badges will be persisted.",
        "summary": "Update Cloud Badges",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgesUpdateByOrgResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateCloudBadgesRequest"
            }
          },
          {
            "name": "org_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/badges/{org_resource_id}/list": {
      "post": {
        "description": "Returns a list of badges for a particular resource",
        "summary": "List Resource Badges",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgesListByOrgResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "org_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListResourceBadge"
              }
            },
            "examples": {
              "application/json": [
                {
                  "value": "sample_value2",
                  "key": "sampe_key2"
                },
                {
                  "value": "sample_value1",
                  "key": "sample_key1"
                }
              ]
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "content-length": {
                "type": "string",
                "default": "75"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 13:55:00 GMT"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/badges/count": {
      "post": {
        "description": "Returns a list of badge counts for all resources. ",
        "summary": "List Resources Badge Count",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgesCountPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/badge/clouds/list": {
      "post": {
        "description": "Return a list of cloud accounts that are badged. ",
        "summary": "List Clouds With Badges",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgeCloudsListPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/badges/create": {
      "post": {
        "description": "Create one or more badges for cloud account(s). If you are adding badges to multiple cloud accounts, the badges will all be the same for the multiple accounts chosen. Note this is an 18.1 feature. Previous versions are not supported.",
        "summary": "Create Badge(s)",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgesCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateBadge%28s%29Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/badges/delete": {
      "post": {
        "description": "Delete one or more badges from one or more cloud accounts. Note this is an 18.1 feature. Previous versions are not supported.",
        "summary": "Delete Badges",
        "tags": [
          "Badges"
        ],
        "operationId": "PublicBadgesDeletePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteBadgesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/list": {
      "post": {
        "description": "List all bots which are not archived.\n\nRequest supports `result list options` for pagination and filtering. Below is the minimum required options for the request.\n\n```\n{\n\t\"filters\": [],\n\t\"limit\": 25,\n\t\"offset\": 0\n}\n```",
        "summary": "List Bots",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryListPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBotsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/{bot_id}/get": {
      "post": {
        "description": "fetch bot by id.",
        "summary": "Get bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryGetByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/{bot_id}/ondemand": {
      "post": {
        "description": "Bots can be run ondemand which will apply the filters and actions to all resources within the scope of the bot.\n\nIf bot is configured to allow ondemand, this request will return `200` if the action succeeds.",
        "summary": "Run bot ondemand",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryOndemandByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/{bot_id}/archive": {
      "post": {
        "description": "Archiving bot will remove scheduled events, compliance data and hide the bot from listing calls as well as the botfactory page in the UI.\n\nThere is currently no way to un-archive a bot and this action should be seen as a delete.",
        "summary": "Archive bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryArchiveByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/{bot_id}/pause": {
      "post": {
        "description": "Pausing bot will remove any pending scheduled events that the bot initiated. Once paused the bot will not run when hookpoint events happen nor will any user be able to run the bot ondemand.",
        "summary": "Pause bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryPauseByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/{bot_id}/resume": {
      "post": {
        "description": "Pausing bot will remove any pending scheduled events that the bot initiated. Resuming will start reacting to hookpoint events but to rescan all resources requires running the bot ondemand after resuming.",
        "summary": "Resume bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryResumeByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/bot/create": {
      "post": {
        "description": "Using the bot creation wizard in the UI is the recommended approach to creating new bots as to ensure correct naming and configuration of filters and actions.\n\nHowever, if a general pattern for creating a bot is known it's quite easy to take an existing bot configuration and use it as a template to programmatically create new bots. On a bot's overview page you can see the JSON configuration for the bot. You can use that JSON to create a new bot. Only the following keys will be used and all other keys ignored:\n\n* name\n* description\n* severity\n* category\n* instructions\n* hookpoints\n* ondemand_enabled\n* state\n* schedule\n\nThis shows which keys will be used in an example bot.\n\n```\n{\n \"category\": \"Security\",\n // \"owner_name\": \"Peter Snelgrove\",\n \"name\": \"Example bot\",\n // \"insight_id\": null,\n // \"resource_id\": \"divvybot:1:21\",\n \"severity\": \"low\",\n // \"detailed_logging\": false,\n // \"date_modified\": \"2018-01-16T15:14:16Z\",\n \"ondemand_enabled\": true,\n // \"source\": null,\n \"state\": \"PAUSED\",\n // \"valid\": true,\n // \"scope\": [],\n // \"owner\": \"divvyuser:1:\",\n // \"date_created\": \"2018-01-16T15:14:16Z\",\n // \"errors\": [],\n \"instructions\": {\n  \"resource_types\": [\n   \"instance\"\n  ],\n  \"groups\": [],\n  \"filters\": [\n   {\n    \"config\": {\n     \"cores\": 2\n    },\n    \"name\": \"divvy.filter.instance_cores_exceeds_threshold\"\n   }\n  ],\n  \"schedule\": null,\n  // \"schedule_description\": null,\n  \"badges\": [\n   {\n    \"value\": \"wheat\",\n    \"key\": \"grain\",\n    \"$$hashKey\": \"object:2869\"\n   }\n  ],\n  \"ondemand_enabled\": true,\n  \"hookpoints\": [],\n  \"actions\": [\n   {\n    \"run_when_result_is\": true,\n    \"config\": {\n     \"hours\": 0\n    },\n    \"name\": \"divvy.action.scheduled_stop\"\n   }\n  ]\n },\n \"description\": \"Demo for API documentation\"\n}\n```\n\nThe uncommented keys represent the payload necessary to create an identical bot.\n\nNote: use the Copy endpoint to copy an existing bot.",
        "summary": "Create bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryBotCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatebotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/botfactory/edit/{bot_id}": {
      "post": {
        "description": "The edit endpoint takes an existing bot JSON config and applies any changes to the following keys with all other keys ignored:\n\n* name\n* description\n* severity\n* category\n* instructions\n* hookpoints\n* ondemand_enabled\n* state\n* schedule",
        "summary": "Edit bot",
        "tags": [
          "Botfactory"
        ],
        "operationId": "PublicBotfactoryEditByBotIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditbotRequest"
            }
          },
          {
            "name": "bot_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cache_instance/{instance_resource_id}/restart": {
      "post": {
        "description": "Execute a restart command against a particular cache instance.\n",
        "summary": "Restart Cache Instance",
        "tags": [
          "Cache Instances"
        ],
        "operationId": "PublicCacheInstanceRestartByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cache_instance/{instance_resource_id}/terminate": {
      "post": {
        "description": "Execute a terminate command against a particular cache instance.",
        "summary": "Terminate Cache Instance",
        "tags": [
          "Cache Instances"
        ],
        "operationId": "PublicCacheInstanceTerminateByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloudtypes/list": {
      "get": {
        "description": "List supported clouds with their type (public/private)",
        "summary": "List Cloud Types",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudtypesListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListCloudTypes"
            },
            "examples": {
              "application/json": {
                "clouds": [
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "AWS",
                    "name": "Amazon Web Services"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "AWS_GOV",
                    "name": "Amazon Web Services (GovCloud)"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "AZURE",
                    "name": "Azure (Service Management)"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "AZURE_ARM",
                    "name": "Azure (ARM)"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "DO",
                    "name": "DigitalOcean"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "GCE",
                    "name": "Google Cloud Platform"
                  },
                  {
                    "cloud_access": "private",
                    "cloud_type_id": "OS",
                    "name": "OpenStack"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "RAX",
                    "name": "Rackspace"
                  },
                  {
                    "cloud_access": "public",
                    "cloud_type_id": "SOFTLAYER",
                    "name": "IBM SoftLayer"
                  },
                  {
                    "cloud_access": "private",
                    "cloud_type_id": "VCLOUD_DIRECTOR",
                    "name": "VMware vCloud Director"
                  },
                  {
                    "cloud_access": "private",
                    "cloud_type_id": "VMWARE_VSPHERE",
                    "name": "VMware vSphere"
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "298"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:13:39 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:13:39.237937"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/clouds/list": {
      "get": {
        "description": "List available configured clouds.",
        "summary": "List Clouds",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudsListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "cloud_type_id",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListClouds"
            },
            "examples": {
              "application/json": {
                "total_count": 1,
                "clouds": [
                  {
                    "status": "REFRESH",
                    "group_resource_id": "samplegroupid",
                    "name": "Sample Cloud",
                    "resource_id": "sample_resource_id",
                    "cloud_type_id": "AWS",
                    "creation_time": "2017-10-17 18:37:30",
                    "id": 1,
                    "resources": 900
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "content-length": {
                "type": "string",
                "default": "263"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:14:14 GMT"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/clouds/provisioning/list": {
      "get": {
        "description": "List available configured clouds\n",
        "summary": "List Provisioning Clouds",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudsProvisioningListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListProvisioningClouds"
            },
            "examples": {
              "application/json": {
                "clouds": [
                  {
                    "status": "REFRESH",
                    "group_resource_id": "test_resource_id",
                    "name": "Test Name",
                    "resource_id": "test_resource_id",
                    "cloud_type_id": "GCP",
                    "creation_time": "2017-10-17 18:37:30",
                    "id": 1
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "content-length": {
                "type": "string",
                "default": "227"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:15:01 GMT"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/cloud/{cloud_resource_id}/regions/list": {
      "get": {
        "description": "List the available regions for a cloud. Since this is purely a function of cloud type, permissions are not enforced.",
        "summary": "List Cloud Regions",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudRegionsListByCloudResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "cloud_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListCloudRegions"
            },
            "examples": {
              "application/json": {
                "regions": [
                  {
                    "status": "ACTIVE",
                    "id": "ap-northeast-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ap-northeast-1",
                    "resource_id": "serviceregion:1:ap-northeast-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "ap-northeast-2",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ap-northeast-2",
                    "resource_id": "serviceregion:1:ap-northeast-2:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "ap-south-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ap-south-1",
                    "resource_id": "serviceregion:1:ap-south-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "ap-southeast-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ap-southeast-1",
                    "resource_id": "serviceregion:1:ap-southeast-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "ap-southeast-2",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ap-southeast-2",
                    "resource_id": "serviceregion:1:ap-southeast-2:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "ca-central-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "ca-central-1",
                    "resource_id": "serviceregion:1:ca-central-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "eu-central-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "eu-central-1",
                    "resource_id": "serviceregion:1:eu-central-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "eu-west-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "eu-west-1",
                    "resource_id": "serviceregion:1:eu-west-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "eu-west-2",
                    "harvest_rate_multiplier": 1.0,
                    "name": "eu-west-2",
                    "resource_id": "serviceregion:1:eu-west-2:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "sa-east-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "sa-east-1",
                    "resource_id": "serviceregion:1:sa-east-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "us-east-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "us-east-1",
                    "resource_id": "serviceregion:1:us-east-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "us-east-2",
                    "harvest_rate_multiplier": 1.0,
                    "name": "us-east-2",
                    "resource_id": "serviceregion:1:us-east-2:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "us-west-1",
                    "harvest_rate_multiplier": 1.0,
                    "name": "us-west-1",
                    "resource_id": "serviceregion:1:us-west-1:"
                  },
                  {
                    "status": "ACTIVE",
                    "id": "us-west-2",
                    "harvest_rate_multiplier": 1.0,
                    "name": "us-west-2",
                    "resource_id": "serviceregion:1:us-west-2:"
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "288"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:29:12 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:29:12.581594"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/cloud/region/{service_region_resource_id}/enable": {
      "post": {
        "description": "Enable a particular service region within a cloud",
        "summary": "Enable Cloud Region",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudRegionEnableByServiceRegionResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "service_region_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/{cloud_resource_id}/delete": {
      "post": {
        "description": "Delete a cloud account. This flips the cloud account status to delete and schedules a job to clean up all resources, properties, etc.",
        "summary": "Delete Cloud",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudDeleteByCloudResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "cloud_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/region/{service_region_resource_id}/disable": {
      "post": {
        "description": "Disable a particular service region within a cloud.",
        "summary": "Disable Cloud Region",
        "tags": [
          "Clouds"
        ],
        "operationId": "PublicCloudRegionDisableByServiceRegionResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "service_region_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/harvestingstrategy/strategy": {
      "post": {
        "description": "Create a harvesting strategy",
        "summary": "Create Harvesting Strategy",
        "tags": [
          "Clouds"
        ],
        "operationId": "HarvestingstrategyStrategyPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateHarvestingStrategyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateHarvestingStrategy"
            },
            "examples": {
              "application/json": {
                "strategy_id": 12
              }
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Harvesting Strategies",
        "tags": [
          "Clouds"
        ],
        "operationId": "HarvestingstrategyStrategyGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/harvestingstrategy/strategy/{{int: strategy_id}}": {
      "post": {
        "description": "Assigns a harvesting strategy to a cloud",
        "summary": "Assign Harvesting Strategy",
        "tags": [
          "Clouds"
        ],
        "operationId": "HarvestingstrategyStrategyIntStrategyIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssignHarvestingStrategyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/prototype/diagnostics/queues/status/get": {
      "get": {
        "description": "Shows the slowest jobs, worker count and statistics and job speed",
        "summary": "Get Queue Status",
        "tags": [
          "Clouds"
        ],
        "operationId": "PrototypeDiagnosticsQueuesStatusGetGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetQueueStatus"
            },
            "headers": {}
          }
        }
      }
    },
    "/prototype/diagnostics/system/status/get": {
      "get": {
        "description": "Provides the NTP details, last harvest time and impaired organizations.",
        "summary": "Get System Status",
        "tags": [
          "Clouds"
        ],
        "operationId": "PrototypeDiagnosticsSystemStatusGetGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/dnszone/{dnszone_resource_id}/dnszonenetworks/list": {
      "post": {
        "description": "List the DNS Zone private networks.",
        "summary": "List DNS Zone Networks",
        "tags": [
          "DNS Zones"
        ],
        "operationId": "PublicDnszoneDnszonenetworksListByDnszoneResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "dnszone_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/dnszone/{dnszone_resource_id}/dnsrecords/list": {
      "post": {
        "description": "List the DNS records within a particular zone.",
        "summary": "List DNS Zone Records",
        "tags": [
          "DNS Zones"
        ],
        "operationId": "PublicDnszoneDnsrecordsListByDnszoneResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "dnszone_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/eventdrivenharvest/{organizationid}": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Add Consumer",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudEventdrivenharvestByOrganizationidPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "organizationid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/eventdrivenharvest/consumer/{organizationid}/producers/add": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Add Producer",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudEventdrivenharvestConsumerProducersAddByOrganizationidPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddProducerRequest"
            }
          },
          {
            "name": "organizationid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/consumers": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Consumers",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudConsumersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListConsumers"
            },
            "examples": {
              "application/json": {
                "consumers": [
                  {
                    "producers": 0,
                    "errors": [],
                    "organization_service_id": 10,
                    "name": "Divvycloud - Consumer",
                    "cloud_type_id": "AWS",
                    "events": 38,
                    "pending": false,
                    "account_id": "1234567890"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/producers/list": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "List Producers",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudProducersListPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/eventdrivenharvest/{organizationid}/disable-consumer": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Remove Consumer",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "organizationid",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/cloud/eventdrivenharvest/producers/disable": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Remove Producer",
        "tags": [
          "Event Driven Harvesting"
        ],
        "operationId": "PublicCloudEventdrivenharvestProducersDisablePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveProducerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/{resource_id}/policies/list": {
      "post": {
        "description": "List the assigned policies to a service user, group or role.",
        "summary": "List Policies",
        "tags": [
          "Identity Management"
        ],
        "operationId": "PublicPoliciesListByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListPolicies"
            },
            "examples": {
              "application/json": {
                "servicepolicies": [
                  {
                    "update_date": "2015-02-06 18:39:46",
                    "create_date": "2015-02-06 18:39:46",
                    "vendor_policy": true,
                    "common": {
                      "account": "My Account",
                      "resource_name": "AdministratorAccess",
                      "organization_service_id": 1,
                      "resource_id": "servicepolicy:1:POIUYQETGDHSDGJ:",
                      "modified_timestamp": "2017-10-17 18:40:31",
                      "discovered_timestamp": "2017-10-17 18:40:31",
                      "cloud": "AZURE",
                      "creation_timestamp": "None",
                      "properties": {
                        "property_list": []
                      },
                      "resource_type": "servicepolicy",
                      "noncompliance": []
                    },
                    "attachment_count": 3,
                    "policy_id": "POIYUQETGDHSDGJ"
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "324"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:32:18 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:32:18.055357"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/{resource_id}/policy/{policy_resource_id}/detach": {
      "post": {
        "description": "Detach a policy from a service user, group, or role.",
        "summary": "Detach Policy",
        "tags": [
          "Identity Management"
        ],
        "operationId": "PublicPolicyDetachByResourceIdAndPolicyResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "policy_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/serviceuser/{resource_id}/accesskeys/list": {
      "post": {
        "description": "List the assigned service access keys for a service user.",
        "summary": "List Access Keys",
        "tags": [
          "Identity Management"
        ],
        "operationId": "PublicServiceuserAccesskeysListByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListAccessKeys"
            },
            "examples": {
              "application/json": {
                "serviceaccesskeys": [
                  {
                    "status": "active",
                    "access_key_id": "SAMPLEACCESSKEY",
                    "create_date": "2017-10-03 17:50:47",
                    "last_used_date": "2017-10-03 19:25:00",
                    "common": {
                      "account": "My Account",
                      "resource_name": "SAMPLERESOURCENAME",
                      "organization_service_id": 1,
                      "resource_id": "serviceaccesskey:1:SAMPLEACCESSKEY:",
                      "modified_timestamp": "2017-10-24 20:16:50",
                      "discovered_timestamp": "2017-10-17 18:39:22",
                      "cloud": "AZURE",
                      "creation_timestamp": "2017-10-03 17:50:47",
                      "properties": {
                        "property_list": []
                      },
                      "resource_type": "serviceaccesskey",
                      "noncompliance": []
                    }
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "311"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:36:24 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:36:24.460034"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/insights/filter-registry": {
      "get": {
        "description": "Returns filters along with a description and supported resources.",
        "summary": "Get Filter Registry",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsFilterRegistryGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/list": {
      "get": {
        "description": "Returns a list of all DivvyCloud and custom insights",
        "summary": "List Insights",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListInsight"
              }
            },
            "examples": {
              "application/json": [
                {
                  "scopes": [],
                  "timeseries": true,
                  "tags": [
                    "best practices",
                    "high availability"
                  ],
                  "severity": 1,
                  "timeseries_cache": 0,
                  "organization_id": 1,
                  "filters": [
                    {
                      "config": {},
                      "name": "divvy.filter.database_instance_multi_az"
                    }
                  ],
                  "owner_resource_id": null,
                  "resource_types": [
                    "dbinstance"
                  ],
                  "name": "Database Instance Not Multi-AZ",
                  "insight_id": 2,
                  "description": "Identify databases that are not configured across multiple availablity zones for resiliency",
                  "template_id": 2
                },
                {
                  "scopes": [],
                  "timeseries": true,
                  "tags": [
                    "pci",
                    "best practices",
                    "security",
                    "cis controls",
                    "hipaa"
                  ],
                  "severity": 4,
                  "timeseries_cache": 0,
                  "organization_id": 1,
                  "filters": [
                    {
                      "config": {
                        "ignore_disabled": false
                      },
                      "name": "divvy.filter.cloud_with_no_service_users"
                    }
                  ],
                  "owner_resource_id": null,
                  "resource_types": [
                    "divvyorganizationservice"
                  ],
                  "name": "Cloud Account Without Service Users",
                  "insight_id": 3,
                  "description": "Identify accounts without any active user accounts.",
                  "template_id": 13
                }
              ]
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "435"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:43:51 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:43:51.190940"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/insights/packs/list": {
      "get": {
        "description": "Returns a list of insights in packs",
        "summary": "List Packs",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsPacksListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListPack"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/public/insights/{{int: insight_id}}/{source}/insight-data-7-days": {
      "get": {
        "description": "Provide the integer insight_id and the string source (backoffice or custom) to identify the insight. Returns a list of history records showing the counts and totals of resources matching the insight.\n\nBoth `insight_id` and `source` keys are present in each insight payload in list and get calls for insights.",
        "summary": "Insight Data 7 Days",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsIntInsightIdInsightData7DaysBySourceGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "source",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/{{int: insight_id}}/{insight_source}": {
      "get": {
        "description": "Gets insight and information relating to it.",
        "summary": "Get Insight",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsIntInsightIdByInsightSourceGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "insight_source",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetInsight"
            },
            "examples": {
              "application/json": {
                "supported_clouds": [
                  "AWS",
                  "GCE",
                  "AZURE_ARM",
                  "AWS_GOV",
                  "AWS_CHINA"
                ],
                "resource_types": [
                  "dbinstance"
                ],
                "description": "Identify database instances with a retention policy that is too low",
                "insight_id": 5,
                "tags": [
                  "best practices",
                  "backup/recovery",
                  "data retention"
                ],
                "notes": "## Overview\n\nRetention periods for databases should typically include a minimum of seven daily backups. This allows administrators to go back in time for data analysis/retrieval purposes if/when an issue arrises. This insight is provided to surface databases with a retention policy of less than seven. Users can copy this insight to make a custom insight that more appropriately reflects their specific thresholds. Note that databases with automated backups disabled will also be included in the results.\n\n### Remediation\n\n- Increase the database retention period. Note that doing this can result in downtime if done outside of the normal maintenance window. The retention can be set in a manual fashion or automated using the `Set Backup Retention` action.\n\n\n### Compliance Information\n  - NIST Cyber Security Framework (CSF): PR.IP-4\n  - GDPR: Article 30: Maintain Records of Processing Activities\n  - SOC 2: A1.2\n  - NIST 800-53: CP-9",
                "inserted_at": "2017-12-07T00:07:15Z",
                "resource_group_blacklist": [],
                "updated_at": "2018-08-05T15:49:22Z",
                "name": "Database Instance Retention Policy Too Low",
                "source": "backoffice",
                "meta_data": null,
                "filters": [
                  {
                    "config": {
                      "days": 6
                    },
                    "name": "divvy.query.database_data_retention_policy_at_most"
                  }
                ],
                "counts": {
                  "cache_updated_at": "2019-03-06T19:31:49.628448",
                  "results": 0,
                  "by_resource_group": {},
                  "by_type": {
                    "dbinstance": 0
                  },
                  "duration": 0.007986,
                  "by_cloud": {},
                  "total": 0,
                  "exemptions": 0
                },
                "custom_severity": null,
                "severity": 2
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "322"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:55:32 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 10:55:32.831992"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/insights/{{int: insight_id}}/delete": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Delete Insight",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsIntInsightIdDeleteDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/{{int: insight_id}}/edit": {
      "post": {
        "description": "Make edits to a particular insight.",
        "summary": "Edit Insight",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsIntInsightIdEditPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditInsightRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/{{int: insight_id}}/counts/refresh": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Refresh Insight Counts",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsIntInsightIdCountsRefreshGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/{insight_id}/timeseries/toggle": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Toggle Insight Timeseries",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsTimeseriesToggleByInsightIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ToggleInsightTimeseriesRequest"
            }
          },
          {
            "name": "insight_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/bulk/create": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Create Bulk",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsBulkCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/bulk/delete": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Bulk Delete",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsBulkDeletePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BulkDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/insights/edit_metadata": {
      "post": {
        "description": "Edit custom metadata associated with a resource",
        "summary": "Edit Metadata",
        "tags": [
          "Insights"
        ],
        "operationId": "PublicInsightsEditMetadataPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditMetadataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/stop": {
      "post": {
        "description": "Execute a stop command against a particular instance.",
        "summary": "Stop Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceStopByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/start": {
      "post": {
        "description": "Execute a start command against a particular instance.",
        "summary": "Start Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceStartByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/restart": {
      "post": {
        "description": "Execute a restart command against a particular instance. Will not work on an instance in the \"stopped\" state.",
        "summary": "Restart Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceRestartByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/pause": {
      "post": {
        "description": "Execute a pause command against a particular instance. Amazon does not implement this command.",
        "summary": "Pause Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstancePauseByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/unpause": {
      "post": {
        "description": "Execute a unpause command against a particular instance. Amazon does not implement this method.\n",
        "summary": "Unpause Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceUnpauseByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/suspend": {
      "post": {
        "description": "Execute a suspend command against a particular instance. Not implemented by Amazon.",
        "summary": "Suspend Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceSuspendByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/resume": {
      "post": {
        "description": "Execute a resume command against a particular instance. Not implemented by Amazon.\n",
        "summary": "Resume Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceResumeByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/terminate": {
      "post": {
        "description": "Execute a terminate command against a particular instance.\n",
        "summary": "Terminate Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceTerminateByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/resize/confirm": {
      "post": {
        "description": "Confirm a resize request which is currently in progress. If a resize request is not explicitly confirmed or reverted it's automatically confirmed after 24 hours. Not implemented by Amazon.",
        "summary": "Confirm Instance Resize",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceResizeConfirmByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/resize/revert": {
      "post": {
        "description": "Revert a resize request which is currently in progress. This will roll back to the instance size/flavor that was previously used. Not implemented by Amazon.",
        "summary": "Revert Instance Resize",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceResizeRevertByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/publicip/attach": {
      "post": {
        "description": "Associate an elastic/public IP with a particular instance.",
        "summary": "Attach Public IP to Instance",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstancePublicipAttachByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachPublicIPtoInstanceRequest"
            }
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/network_interfaces/list": {
      "post": {
        "description": "List the network interfaces currently attached to an instance.",
        "summary": "List Instance Network Interfaces",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceNetworkInterfacesListByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListInstanceNetworkInterfaces"
            },
            "examples": {
              "application/json": {
                "network_interfaces": [
                  {
                    "subnet_resource_id": "privatesubnet:1:us-east-1:subnet-123456:",
                    "network_resource_id": "privatenetwork:1:us-east-1:vpc-98765:",
                    "subnet_id": "subnet-121212",
                    "ip_addresses": [
                      {
                        "ip_address_type": "Ipv4PrivateAddress",
                        "ip_address": "000.00.00.00"
                      }
                    ],
                    "device_index": 0,
                    "instance_id": "i-98989898989",
                    "network_interface_id": "eni-1234",
                    "common": {
                      "account": "Sample Account",
                      "resource_name": "eni-sampleresource",
                      "organization_service_id": 1,
                      "availability_zone": "us-east-1b",
                      "region": "us-east-1",
                      "resource_id": "networkinterface:1:us-east-1:eni-1234:",
                      "cloud": "AWS"
                    },
                    "mac_address": "11:99:44:33:22:rr",
                    "instance_resource_id": "instance:1:us-east-1:i-98989898989:"
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "355"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:01:40 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 11:01:40.756523"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/snapshot/create": {
      "post": {
        "description": "Create a image based off of an existing instance. Not implemented by Amazon.",
        "summary": "Create Image Snapshot",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceSnapshotCreateByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateImageSnapshotRequest"
            }
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/networkinterface/attach": {
      "post": {
        "description": "Attach a network interface to an instance.",
        "summary": "Attach Network Interface",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceNetworkinterfaceAttachByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachNetworkInterfaceRequest"
            }
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/get_console_output": {
      "post": {
        "description": "Obtain the console output for a particular instance.",
        "summary": "Get Console Output",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstanceGetConsoleOutputByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/instance/{instance_resource_id}/publicip/detach": {
      "post": {
        "description": "Detach the primary public IP from an instance (bound to device_index 0).",
        "summary": "Detach Primary Public IP",
        "tags": [
          "Instances"
        ],
        "operationId": "PublicInstancePublicipDetachByInstanceResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "instance_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/privatenetwork/{privatenetwork_resource_id}/subnets/list": {
      "post": {
        "description": "List the subnets within a particular network.",
        "summary": "List Subnets",
        "tags": [
          "Networks"
        ],
        "operationId": "PublicPrivatenetworkSubnetsListByPrivatenetworkResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "privatenetwork_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "415"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:05:58 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 11:05:58.669170"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/privatenetwork/{private_network_resource_id}/network_interfaces/list": {
      "post": {
        "description": "List the network interfaces within a particular network.\n",
        "summary": "List Network Interfaces",
        "tags": [
          "Networks"
        ],
        "operationId": "PublicPrivatenetworkNetworkInterfacesListByPrivateNetworkResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "private_network_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/privatenetwork/{private_network_resource_id}/routetables/list": {
      "post": {
        "description": "List the route tables within a particular network.\n",
        "summary": "List Route Tables",
        "tags": [
          "Networks"
        ],
        "operationId": "PublicPrivatenetworkRoutetablesListByPrivateNetworkResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "private_network_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRouteTables"
            },
            "examples": {
              "application/json": {
                "routetables": [
                  {
                    "network_resource_id": "privatenetwork:1:us-west-2:vpc-1111111111:",
                    "network_id": "vpc-111111111",
                    "vpc_association_id": "sampleassociationid",
                    "subnet_count": 0,
                    "common": {
                      "account": "Account #1",
                      "resource_name": "sampleresourcename",
                      "organization_service_id": 1,
                      "resource_id": "routetable:1:us-west-2:rtb-routetable:",
                      "region": "us-west-2",
                      "modified_timestamp": "2017-10-17 18:42:11",
                      "discovered_timestamp": "2017-10-17 18:42:11",
                      "cloud": "AWS",
                      "creation_timestamp": "None",
                      "properties": {
                        "property_list": []
                      },
                      "resource_type": "routetable",
                      "noncompliance": []
                    },
                    "route_table_id": "rtb-routetable",
                    "main": "Yes",
                    "route_count": 1,
                    "properties": {
                      "property_list": []
                    }
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "339"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:10:58 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-25 11:10:58.977631"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/routetable/{routetable_resource_id}/routes/list": {
      "post": {
        "description": "Retrieves a list of routes associated with a route table",
        "summary": "List Routes",
        "tags": [
          "Networks"
        ],
        "operationId": "PublicRoutetableRoutesListByRoutetableResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "routetable_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRouteTable"
            },
            "examples": {
              "application/json": {
                "routes": [
                  {
                    "target_id": "zhs-6d1efff8",
                    "target_type": "gateway",
                    "state": "active",
                    "common": {
                      "account": "Test Account",
                      "organization_service_id": 3,
                      "region": "ap-northeast-1",
                      "cloud": "Test Cloud",
                      "resource_id": "route:1:ap-northeast-1:rtb-55885e32:0.0.0.0%133G1:"
                    },
                    "route_table_id": "rtb-55885e32",
                    "cidr": "0.0.0.0/0"
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "259"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Mon, 23 Oct 2017 18:15:08 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-23 14:15:08.524878"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/prototype/domain/organizations/get": {
      "get": {
        "description": "Requires domain admin privilages.",
        "summary": "List Organizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "PrototypeDomainOrganizationsGetGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Listorganizations."
              }
            },
            "examples": {
              "application/json": [
                {
                  "organization_id": 1,
                  "name": "Default Organization"
                },
                {
                  "organization_id": 2,
                  "name": "Placeholder Name"
                }
              ]
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "content-length": {
                "type": "string",
                "default": "108"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:16:29 GMT"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/domain/organization/create": {
      "post": {
        "description": "Creates a new isolated environment. After creating organizations a domain admin user must switch contexts into the organization using the `Switch organization` endpoint.",
        "summary": "Create new organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "PrototypeDomainOrganizationCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateneworganizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/prototype/domain/switch_organization": {
      "post": {
        "description": "After this request all future API requests made will be in the context of this organization. On the next login, the user will remain in the context of the last organization they were in.\n\nSwitching organizations is restricted to Domain Admins.",
        "summary": "Switch organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "PrototypeDomainSwitchOrganizationPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SwitchorganizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/prototype/domain/organization/{organization_resource_id}/update": {
      "post": {
        "description": "Changes name of organization. Organization names are globally unique for installations. Conflicting names will raise an error.",
        "summary": "Edit organization name",
        "tags": [
          "Organizations"
        ],
        "operationId": "PrototypeDomainOrganizationUpdateByOrganizationResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EditorganizationnameRequest"
            }
          },
          {
            "name": "organization_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/prototype/domain/organization/{organization_resource_id}/delete": {
      "delete": {
        "description": "Deletes organization and deletes all cloud account and resource data as well as all users and bot data.",
        "summary": "Delete Organization",
        "tags": [
          "Organizations"
        ],
        "operationId": "PrototypeDomainOrganizationDeleteByOrganizationResourceIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "organization_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/resourceaccesslist/{resource_access_list_resource_id}/rules/list": {
      "post": {
        "description": "List the security rules within a particular resource access list.",
        "summary": "List Rules",
        "tags": [
          "Resource Access Lists"
        ],
        "operationId": "PublicResourceaccesslistRulesListByResourceAccessListResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRulesRequest"
            }
          },
          {
            "name": "resource_access_list_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRules"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "rule_action": "allow",
                    "direction": "ingress",
                    "ip_protocol": "all",
                    "source_network": "0.0.0.0/0",
                    "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
                    "source_port_specification": "0-65535",
                    "access_list": {
                      "resource_name": "acl-1234567",
                      "resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:"
                    },
                    "priority": 100,
                    "is_temporary": false,
                    "common": {
                      "account": "Example Account",
                      "resource_name": "acl-1234567",
                      "organization_service_id": 1,
                      "resource_id": "resourceaccesslistrule:1:ap-northeast-1:examplelistrulenumber:",
                      "region": "ap-northeast-1",
                      "modified_timestamp": "2017-10-17 18:38:24",
                      "discovered_timestamp": "2017-10-17 18:38:24",
                      "cloud": "AWS",
                      "creation_timestamp": "None",
                      "properties": {
                        "property_list": [
                          {
                            "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
                            "name": "divvy.subnet_associations",
                            "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
                          }
                        ]
                      },
                      "resource_type": "resourceaccesslistrule",
                      "noncompliance": []
                    },
                    "access_list_type": "network_acl",
                    "properties": {
                      "property_list": []
                    }
                  }
                ]
              }
            },
            "headers": {
              "access-control-allow-headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "access-control-allow-methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "access-control-allow-origin": {
                "type": "string",
                "default": "*"
              },
              "cache-control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "content-encoding": {
                "type": "string",
                "default": "gzip"
              },
              "content-length": {
                "type": "string",
                "default": "652"
              },
              "content-type": {
                "type": "string",
                "default": "application/json"
              },
              "date": {
                "type": "string",
                "default": "Mon, 23 Oct 2017 19:08:43 GMT"
              },
              "last-modified": {
                "type": "string",
                "default": "2017-10-23 15:08:43.732194"
              },
              "server": {
                "type": "string",
                "default": "waitress"
              },
              "vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/resourcegroup/create": {
      "post": {
        "description": "Public",
        "summary": "Create Resource Group - Public",
        "tags": [
          "Resource Groups "
        ],
        "operationId": "PublicResourcegroupCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateResourceGroup-PublicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateResourceGroup"
            },
            "examples": {
              "application/json": {
                "category": "system",
                "description": "Would you believe it's for grouping things?",
                "creation_time": "2017-10-25 13:36:59",
                "nested_resource_groups": [],
                "owner_type": "organization",
                "id": "resourcegroup:3:",
                "group_type": "user",
                "name": "Test Resource Group"
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "263"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 17:36:59 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/resourcegroups/resources/add": {
      "post": {
        "description": "This adds a resource to the selected resource group",
        "summary": "Add Resource to Resource Group",
        "tags": [
          "Resource Groups "
        ],
        "operationId": "PrototypeResourcegroupsResourcesAddPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddResourcetoResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddResourcetoResourceGroup"
            },
            "examples": {
              "application/json": {
                "resource_ids": [
                  "instance:24:us-east-2:i-03beb3f6c5aac378c:"
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/public/resource/{resource_id}/detail": {
      "get": {
        "description": "Get all of the details about a resource including its dependencies.",
        "summary": "Detail Resource",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceDetailByResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DetailResource"
            },
            "examples": {
              "application/json": {
                "dependencies": {},
                "details": {
                  "resource_type": "storagecontainer",
                  "storagecontainer": {
                    "common": {
                      "account": "Chef's Cloud Acct",
                      "cloud": "AWS",
                      "creation_timestamp": "2017-09-26 16:17:45",
                      "discovered_timestamp": "2017-09-26 16:26:08",
                      "modified_timestamp": "2017-10-24 23:12:00",
                      "noncompliance": [
                        {
                          "reporter_resource_id": "divvybot:1:21",
                          "resource_id": "storagecontainer:2:us-east-1:storagecontainer:"
                        },
                        {
                          "reporter_resource_id": "divvybot:1:41",
                          "resource_id": "storagecontainer:2:us-east-1:storagecontainer:"
                        }
                      ],
                      "organization_service_id": 2,
                      "properties": {
                        "property_list": []
                      },
                      "region": "us-east-1",
                      "resource_id": "storagecontainer:2:us-east-1:storagecontainer:",
                      "resource_name": "storagecontainer",
                      "resource_type": "storagecontainer"
                    },
                    "creation_date": "2017-09-26 16:17:45",
                    "encrypted": true,
                    "object_count": 0,
                    "total_size": 0
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "399"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 16:58:21 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 12:58:21.494332"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/resource/{resource_id}/notes/list": {
      "post": {
        "description": "Get all of the notes about a particular resource which were created by users.",
        "summary": "Get Resource Notes",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceNotesListByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResourceNotes"
            },
            "examples": {
              "application/json": {
                "resource_notes": []
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "22"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 17:00:22 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/resource/{resource_id}/notes/create": {
      "post": {
        "description": "Create a new note for a particular resource. Notes can be used to provide additional context or background about a particular resource to improve collaboration.",
        "summary": "Create Resource Note",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceNotesCreateByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateResourceNoteRequest"
            }
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/resource/{resource_id}/tags/list": {
      "get": {
        "description": "List tags for a given resource.",
        "summary": "List Resource Tags",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceTagsListByResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResourceTags"
            },
            "examples": {
              "application/json": {
                "resource_tags": [
                  {
                    "key": "divvy-2038",
                    "value": "bot"
                  }
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "58"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 17:01:54 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/resource/{resource_id}/settings/list": {
      "post": {
        "description": "List settings for a given resource.",
        "summary": "List Resource Settings",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceSettingsListByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListResourceSettings"
            },
            "examples": {
              "application/json": {
                "setting_list": []
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "20"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 17:17:45 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/resource/{resource_id}/associations/get": {
      "post": {
        "description": "Get the resource group associations for a particular resource.",
        "summary": "Get Resource Associations",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceAssociationsGetByResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetResourceAssociations"
            },
            "examples": {
              "application/json": {
                "resource_groups": [
                  {
                    "name": "test",
                    "owner_type": "organization",
                    "owner_resource_id": "divvyuser:1:",
                    "group_type": "user",
                    "id": "resourcegroup:3:"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/public/resource/owner/set": {
      "post": {
        "description": "Set the owner for one or more resources. Only administrators can set owners.",
        "summary": "Set Resource Owner",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceOwnerSetPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SetResourceOwnerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/resource/query": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Query Resources",
        "tags": [
          "Resources"
        ],
        "operationId": "PublicResourceQueryPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/QueryResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/QueryResources"
            },
            "examples": {
              "application/json": {
                "scopes": [],
                "limit": 25,
                "filters": [],
                "offset": 0,
                "order_by": "",
                "counts": {
                  "serviceaccesskey": 34,
                  "serviceencryptionkey": 0,
                  "servicecertificate": 4,
                  "servicerole": 29,
                  "networkpeer": 1,
                  "networkinterface": 143,
                  "mcsnapshot": 0,
                  "serviceuser": 32,
                  "servicegroup": 4,
                  "networkflowlog": 8,
                  "divvyorganizationservice": 6,
                  "servicepolicy": 907,
                  "privatesubnet": 186,
                  "publicip": 34,
                  "instance": 67,
                  "bigdatasnapshot": 9,
                  "resourceaccesslist": 292,
                  "servicealarm": 2,
                  "resourceaccesslistrule": 785,
                  "instancereservation": 0,
                  "storagecontainer": 54,
                  "volume": 101,
                  "internetgateway": 54,
                  "bigdatainstance": 2,
                  "dbinstance": 16,
                  "privatenetwork": 73,
                  "mcinstance": 3,
                  "dbsnapshot": 135,
                  "hypervisor": 0,
                  "routetable": 78,
                  "privateimage": 106,
                  "dnszone": 5,
                  "snapshot": 160,
                  "serviceregion": 92,
                  "apiaccountingconfig": 3,
                  "sshkeypair": 55,
                  "loadbalancer": 10
                },
                "selected_resource_type": null,
                "resources": [],
                "supported_types": [
                  "instance",
                  "volume",
                  "snapshot",
                  "serviceuser",
                  "servicegroup",
                  "servicerole",
                  "servicepolicy",
                  "servicecertificate",
                  "bigdatainstance",
                  "dbinstance",
                  "internetgateway",
                  "mcinstance",
                  "resourceaccesslist",
                  "resourceaccesslistrule",
                  "storagecontainer",
                  "privateimage",
                  "privatenetwork",
                  "privatesubnet",
                  "networkflowlog",
                  "networkinterface",
                  "networkpeer",
                  "publicip",
                  "loadbalancer",
                  "instancereservation",
                  "dbsnapshot",
                  "mcsnapshot",
                  "bigdatasnapshot",
                  "routetable",
                  "hypervisor",
                  "apiaccountingconfig",
                  "serviceaccesskey",
                  "serviceencryptionkey",
                  "divvyorganizationservice",
                  "servicealarm",
                  "serviceregion",
                  "sshkeypair",
                  "dnszone"
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "552"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 17:27:21 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 13:27:21.369094"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/role/create": {
      "post": {
        "description": "Create a named permission definition.",
        "summary": "Create Role",
        "tags": [
          "Roles"
        ],
        "operationId": "PublicRoleCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateRole"
            },
            "examples": {
              "application/json": {
                "description": "Role defines permissions to scopes",
                "resource_id": "divvyrole:1:9",
                "manage": false,
                "cloud_scopes": [],
                "view": true,
                "groups": [],
                "all_permissions": false,
                "global_scope": false,
                "delete": false,
                "provision": false,
                "resource_group_scopes": [],
                "name": "Test Role"
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "286"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 16:03:19 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/role/{role_resource_id}/update": {
      "post": {
        "description": "Update Role definition.\n\nIt's important to note that `All` permission, the api endpoint does not automatically set `view`, `provision`, `manage`, or `delete` to false. This means in the UI you will see all values selected. It has no negative effect but does make the presentation of the data less clear to end users.\n\nConsider this and the create endpoints to be explicit APIs that require the exact permission rules you desire.",
        "summary": "Update Role",
        "tags": [
          "Roles"
        ],
        "operationId": "PublicRoleUpdateByRoleResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRoleRequest"
            }
          },
          {
            "name": "role_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRole"
            },
            "examples": {
              "application/json": {
                "description": "Role defines permissions to scopes",
                "resource_id": "divvyrole:1:9",
                "manage": false,
                "cloud_scopes": [],
                "view": false,
                "groups": [],
                "all_permissions": true,
                "global_scope": false,
                "delete": false,
                "provision": false,
                "resource_group_scopes": [],
                "name": "Test Role"
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "286"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 16:04:34 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/roles/list": {
      "post": {
        "description": "List all roles user has accesss to view\n\nRequires Organization Admin",
        "summary": "List Roles",
        "tags": [
          "Roles"
        ],
        "operationId": "PublicRolesListPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRoles"
            },
            "examples": {
              "application/json": {
                "roles": [
                  {
                    "description": "Basic user role.",
                    "resource_id": "divvyrole:1:5",
                    "manage": true,
                    "cloud_scopes": [
                      "divvyorganizationservice:2",
                      "divvyorganizationservice:3"
                    ],
                    "view": true,
                    "groups": [
                      "divvyusergroup:5",
                      "divvyusergroup:10"
                    ],
                    "all_permissions": false,
                    "global_scope": false,
                    "delete": false,
                    "provision": true,
                    "resource_group_scopes": [
                      "resourcegroup:2:"
                    ],
                    "name": "basicRole"
                  },
                  {
                    "description": "Role defines permissions to scopes",
                    "resource_id": "divvyrole:1:9",
                    "manage": false,
                    "cloud_scopes": [],
                    "view": false,
                    "groups": [],
                    "all_permissions": true,
                    "global_scope": false,
                    "delete": false,
                    "provision": false,
                    "resource_group_scopes": [],
                    "name": "Test Role"
                  }
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "282"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 16:05:02 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 12:05:02.386697"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/roles/{role_resource_id}/scope/update": {
      "post": {
        "description": "Define what resources the role applies to by specifying Clouds (OrganizationServices) and/or ResourceGroups. Use for both Adding and Removing scopes from a role.\n\nParams: Body\n\n`resource_ids`: Resource IDs to add to the role scope.\n\n`deprecated_resource_ids`: Resource IDs to remove from the role scope.\n\nRequires Organization Admin",
        "summary": "Update Role Scope; Clouds & Resource Groups",
        "tags": [
          "Roles"
        ],
        "operationId": "PublicRolesScopeUpdateByRoleResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRoleScope%3BClouds%26ResourceGroupsRequest"
            }
          },
          {
            "name": "role_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/roles/{role_resource_id}/groups/update": {
      "post": {
        "description": "Associate and Disassociate User groups from a role.\n\nParams: Body\n\n`group_resource_ids`: Resource IDs to add to the role's UserGroups. Compared with current User Groups set; additional ids are added, missing ids removed.\n\nRequires Organization Admin",
        "summary": "Update Role's User Groups",
        "tags": [
          "Roles"
        ],
        "operationId": "PublicRolesGroupsUpdateByRoleResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRole%27sUserGroupsRequest"
            }
          },
          {
            "name": "role_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRole%27sUserGroups"
            },
            "examples": {
              "application/json": {
                "description": "Role defines permissions to scopes",
                "resource_id": "divvyrole:1:9",
                "manage": false,
                "cloud_scopes": [],
                "view": false,
                "groups": [
                  "divvyusergroup:10"
                ],
                "all_permissions": true,
                "global_scope": false,
                "delete": false,
                "provision": false,
                "resource_group_scopes": [],
                "name": "Test Role"
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "305"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 16:52:02 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/groups/list": {
      "get": {
        "description": "List current groups.\n\nRequires View permission",
        "summary": "List Groups",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupsListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListGroups"
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "resource_id": "divvyusergroup:5",
                    "group_id": 5,
                    "users": [
                      {
                        "username": "kobe",
                        "two_factor_enabled": false,
                        "user_id": 4,
                        "name": "Kobe B",
                        "resource_id": "divvyuser:4:",
                        "two_factor_required": false,
                        "organization_name": "Default Organization",
                        "domain_admin": false,
                        "email_address": "kobe@divvycloud.com",
                        "organization_admin": false
                      }
                    ],
                    "roles": [
                      {
                        "description": "This is a basic user role. Limited priveleges.",
                        "resource_id": "divvyrole:1:5",
                        "manage": true,
                        "cloud_scopes": [
                          "divvyorganizationservice:2",
                          "divvyorganizationservice:3"
                        ],
                        "view": true,
                        "groups": [
                          "divvyusergroup:5"
                        ],
                        "all_permissions": false,
                        "global_scope": false,
                        "delete": false,
                        "provision": true,
                        "resource_group_scopes": [
                          "resourcegroup:2:"
                        ],
                        "name": "basicRole"
                      }
                    ],
                    "name": "BasicUsers"
                  }
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "355"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:56:31 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 10:56:31.320132"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/prototype/group/create": {
      "post": {
        "description": "Create new user group\n\nRequires Org admin permission",
        "summary": "Create Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupCreatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateGroup"
            },
            "examples": {
              "application/json": {
                "group": {
                  "resource_id": "divvyusergroup:9",
                  "group_id": 9,
                  "users": [],
                  "roles": [],
                  "name": "Test UserGroup"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "113"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:58:09 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/delete": {
      "delete": {
        "description": "Delete User group\n\nRequires Org admin permissions",
        "summary": "Delete Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupDeleteByGroupResourceIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "2"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:03:10 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/users/add": {
      "post": {
        "description": "Add users to User group\n\nRequires Org admin permissions",
        "summary": "Add Group Users",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupUsersAddByGroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddGroupUsersRequest"
            }
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddGroupUsers"
            },
            "examples": {
              "application/json": {
                "group": {
                  "resource_id": "divvyusergroup:10",
                  "group_id": 10,
                  "users": [
                    {
                      "username": "chefec2",
                      "two_factor_enabled": false,
                      "user_id": 6,
                      "name": "Chef Estrada",
                      "resource_id": "divvyuser:6:",
                      "two_factor_required": false,
                      "organization_name": "Default Organization",
                      "domain_admin": false,
                      "email_address": "chef.ec2@divvycloud.com",
                      "organization_admin": true
                    }
                  ],
                  "roles": [],
                  "name": "Test UserGroup"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "413"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:06:35 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/user/remove": {
      "post": {
        "description": "Remove user from User Group\n\nRequires Modify permissions",
        "summary": "Remove User from Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupUserRemoveByGroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveUserfromGroupRequest"
            }
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveUserfromGroup"
            },
            "examples": {
              "application/json": {
                "group": {
                  "resource_id": "divvyusergroup:10",
                  "group_id": 10,
                  "users": [],
                  "roles": [],
                  "name": "Test UserGroup"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "115"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:13:23 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/users/list": {
      "post": {
        "description": "Lists all current users in User Group\n\nRequires View permissions",
        "summary": "List Users in User Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupUsersListByGroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListUsersinUserGroup"
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "username": "chefec2",
                    "two_factor_enabled": false,
                    "user_id": 6,
                    "name": "Chef Estrada",
                    "resource_id": "divvyuser:6:",
                    "two_factor_required": false,
                    "organization_name": "Default Organization",
                    "domain_admin": false,
                    "email_address": "chef.ec2@divvycloud.com",
                    "organization_admin": true
                  }
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "311"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:15:46 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/roles/list": {
      "post": {
        "description": "Lists all current Roles associated to User Group\n\nRequires Org Admin",
        "summary": "List Roles in User Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupRolesListByGroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListRolesinUserGroup"
            },
            "examples": {
              "application/json": {
                "roles": []
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "13"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:16:19 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/prototype/group/{group_resource_id}/roles/update": {
      "post": {
        "description": "Update the roles associated with a UserGroup. This takes in a list of DivvyRole resource ID strings.\n\nRequires Org Admin",
        "summary": "Update Roles in User Group",
        "tags": [
          "User Groups - Role Based Access"
        ],
        "operationId": "PrototypeGroupRolesUpdateByGroupResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRolesinUserGroupRequest"
            }
          },
          {
            "name": "group_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateRolesinUserGroup"
            },
            "examples": {
              "application/json": {
                "group": {
                  "resource_id": "divvyusergroup:10",
                  "group_id": 10,
                  "users": [
                    {
                      "username": "chefec2",
                      "two_factor_enabled": false,
                      "user_id": 6,
                      "name": "Chef Estrada",
                      "resource_id": "divvyuser:6:",
                      "two_factor_required": false,
                      "organization_name": "Default Organization",
                      "domain_admin": false,
                      "email_address": "chef.ec2@divvycloud.com",
                      "organization_admin": true
                    }
                  ],
                  "roles": [
                    {
                      "description": "Basic User priveleges.",
                      "resource_id": "divvyrole:1:5",
                      "manage": true,
                      "cloud_scopes": [
                        "divvyorganizationservice:2",
                        "divvyorganizationservice:3"
                      ],
                      "view": true,
                      "groups": [
                        "divvyusergroup:5",
                        "divvyusergroup:10"
                      ],
                      "all_permissions": false,
                      "global_scope": false,
                      "delete": false,
                      "provision": true,
                      "resource_group_scopes": [
                        "resourcegroup:2:"
                      ],
                      "name": "basicRole"
                    }
                  ],
                  "name": "Test UserGroup"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "375"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 15:26:17 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 11:26:25.527053"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/public/user/login": {
      "post": {
        "description": "Authenticate User, returns X-Auth-Token",
        "summary": "Login",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserLoginPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OriginalAuth"
            },
            "examples": {
              "application/json": {
                "user_id": 1,
                "session_id": "4a57825623be496db8796f9894d471b5",
                "session_timeout": 20,
                "customer_id": "92:BF:28:F6:B8:A9:ED:6E:3B:83:0B:A6:55:5E:24:AB:41:B5:D4:D7",
                "user_name": "Saran Ahluwalia",
                "auth_plugin_exists": false,
                "user_email": "saran@divvycloud.com",
                "system_admin": true
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "286"
              },
              "Date": {
                "type": "string",
                "default": "Mon, 07 Nov 2016 15:12:28 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/user/logout": {
      "post": {
        "description": "Cancel current session",
        "summary": "Logout - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserLogoutPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/user/info": {
      "get": {
        "description": "User info basic on X-Auth-Token session",
        "summary": "User Info - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserInfoGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            },
            "examples": {
              "application/json": {
                "username": "janedoe",
                "two_factor_enabled": false,
                "user_id": 1,
                "name": "Jane Doe",
                "resource_id": "divvyuser:1:",
                "two_factor_required": false,
                "organization_name": "Default Organization",
                "domain_admin": true,
                "email_address": "jane.doe@divvycloud.com",
                "auth_plugin_exists": false,
                "organization_admin": false
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "334"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:10:34 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/users/list": {
      "get": {
        "description": "List of current active users",
        "summary": "Users List - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUsersListGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UsersList"
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "username": "jamman",
                    "two_factor_enabled": false,
                    "user_id": 2,
                    "name": "James Madison",
                    "resource_id": "divvyuser:2:",
                    "two_factor_required": false,
                    "organization_name": "Default Organization",
                    "domain_admin": false,
                    "groups": 0,
                    "email_address": "jamman@divvycloud.com",
                    "owned_resources": 4,
                    "organization_admin": false
                  },
                  {
                    "username": "benfrank",
                    "two_factor_enabled": false,
                    "user_id": 3,
                    "name": "Benjamin Franklin",
                    "resource_id": "divvyuser:3:",
                    "two_factor_required": false,
                    "organization_name": "Default Organization",
                    "domain_admin": false,
                    "groups": 0,
                    "email_address": "benfrank@divvycloud.com",
                    "owned_resources": 0,
                    "organization_admin": false
                  },
                  {
                    "username": "kobe",
                    "two_factor_enabled": false,
                    "user_id": 4,
                    "name": "Kobe B",
                    "resource_id": "divvyuser:4:",
                    "two_factor_required": false,
                    "organization_name": "Default Organization",
                    "domain_admin": false,
                    "groups": 1,
                    "email_address": "kobe@divvycloud.com",
                    "owned_resources": 0,
                    "organization_admin": false
                  },
                  {
                    "username": "chefec2",
                    "two_factor_enabled": false,
                    "user_id": 6,
                    "name": "Chef Champ",
                    "resource_id": "divvyuser:6:",
                    "two_factor_required": false,
                    "organization_name": "Default Organization",
                    "domain_admin": false,
                    "groups": 0,
                    "email_address": "chef@divvycloud.com",
                    "owned_resources": 0,
                    "organization_admin": true
                  }
                ]
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Cache-Control": {
                "type": "string",
                "default": "private, no-cache, no-store, no-transform, must-revalidate, max-age=0"
              },
              "Content-Encoding": {
                "type": "string",
                "default": "gzip"
              },
              "Content-Length": {
                "type": "string",
                "default": "332"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:19:22 GMT"
              },
              "Last-Modified": {
                "type": "string",
                "default": "2017-10-25 10:19:23.013601"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              },
              "Vary": {
                "type": "string",
                "default": "Accept-Encoding"
              }
            }
          }
        }
      }
    },
    "/prototype/user/{user_resource_id}/delete": {
      "delete": {
        "description": "Delete user by id",
        "summary": "Delete User - Prototype",
        "tags": [
          "Users"
        ],
        "operationId": "PrototypeUserDeleteByUserResourceIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "user_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {}
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "2"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:41:19 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/user/tfa_state": {
      "post": {
        "description": "Determine whether two-factor authentication is enabled and/or required for the current user or, if the current user is an admin, for any arbitrary user given by user_id.\n",
        "summary": "2FA status Session - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserTfaStatePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/2FAstatusSession-PublicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/2FAStats"
            },
            "examples": {
              "application/json": {
                "required": false,
                "enabled": false
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "37"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:48:56 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/user/tfa_enable": {
      "post": {
        "description": "Enable two-factor Auth for current X-Auth-Token session user.\n",
        "summary": "2FA Enable - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserTfaEnablePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Enable2FA"
            },
            "examples": {
              "application/json": {
                "otp_secret": "XNAY6CSZ2WIV3W6F"
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "34"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:51:59 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/user/tfa_disable": {
      "post": {
        "description": "Disable two-factor Auth for current X-Auth-Token session user.\n",
        "summary": "2FA Disable by Session - Public",
        "tags": [
          "Users"
        ],
        "operationId": "PublicUserTfaDisablePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Disable2FA"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "17"
              },
              "Date": {
                "type": "string",
                "default": "Wed, 25 Oct 2017 14:54:14 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/volume/{volume_resource_id}/attach": {
      "post": {
        "description": "Attaches a network volume to an instance.",
        "summary": "Attach Volume",
        "tags": [
          "Volumes"
        ],
        "operationId": "PublicVolumeAttachByVolumeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachVolumeRequest"
            }
          },
          {
            "name": "volume_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/volume/{volume_resource_id}/detach": {
      "post": {
        "description": "Detaches a volume from an instance.",
        "summary": "Detach Volume",
        "tags": [
          "Volumes"
        ],
        "operationId": "PublicVolumeDetachByVolumeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "volume_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/volume/{volume_resource_id}/snapshot/create": {
      "post": {
        "description": "Create a snapshot from an existing volume. This action requires the CONTROL permission.\n",
        "summary": "Create Snapshot",
        "tags": [
          "Volumes"
        ],
        "operationId": "PublicVolumeSnapshotCreateByVolumeResourceIdPost",
        "deprecated": false,
        "produces": [
          "text/html; charset=utf-8"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSnapshotRequest"
            }
          },
          {
            "name": "volume_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "type": "string",
                "default": "Origin, X-Requested-With, Content-Type, Accept"
              },
              "Access-Control-Allow-Methods": {
                "type": "string",
                "default": "POST, GET, OPTIONS"
              },
              "Access-Control-Allow-Origin": {
                "type": "string",
                "default": "*"
              },
              "Content-Length": {
                "type": "string",
                "default": "0"
              },
              "Date": {
                "type": "string",
                "default": "Tue, 24 Oct 2017 20:05:05 GMT"
              },
              "Server": {
                "type": "string",
                "default": "waitress"
              }
            }
          }
        }
      }
    },
    "/public/volume/{volume_resource_id}/modify": {
      "post": {
        "description": "Schedule the modification of a volume resource",
        "summary": "Modify Volume",
        "tags": [
          "Volumes"
        ],
        "operationId": "PublicVolumeModifyByVolumeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyVolumeRequest"
            }
          },
          {
            "name": "volume_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/public/whitelabel/set-custom-logo": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Set Custom Logo",
        "tags": [
          "Whitelabel"
        ],
        "operationId": "PublicWhitelabelSetCustomLogoPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Auth-Token",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "AddAWSCloudAccountRequest": {
      "title": "AddAWSCloudAccountRequest",
      "example": {
        "creation_params": {
          "cloud_type": "AWS",
          "authentication_type": "standard",
          "name": "DivvyCloud Development",
          "account_number": "0123456789012",
          "api_key": "AKIAKNDIVBSDVBKKSJ",
          "secret_key": "sdlkvnsdAKKNCKEN+sdkjcnvsdkvjsL"
        }
      },
      "type": "object",
      "properties": {
        "creation_params": {
          "$ref": "#/definitions/CreationParams"
        }
      },
      "required": [
        "creation_params"
      ]
    },
    "CreationParams": {
      "title": "CreationParams",
      "type": "object",
      "properties": {
        "cloud_type": {
          "type": "string"
        },
        "authentication_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "api_key": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        }
      },
      "required": [
        "cloud_type",
        "authentication_type",
        "name",
        "account_number",
        "api_key",
        "secret_key"
      ]
    },
    "AddAWSCloudAccount": {
      "title": "AddAWSCloudAccount",
      "example": {
        "status": "REFRESH",
        "group_resource_id": "divvyorganizationservice:18",
        "name": "DivvyCloud Development",
        "resource_id": "divvyorganizationservice:18",
        "cloud_type_id": "AWS",
        "creation_time": "2017-10-25 19:03:50.409391",
        "id": 18
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "group_resource_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "cloud_type_id": {
          "type": "string"
        },
        "creation_time": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "group_resource_id",
        "name",
        "resource_id",
        "cloud_type_id",
        "creation_time",
        "id"
      ]
    },
    "AddAWSCloudAccount(InstanceAssumeRole)Request": {
      "title": "AddAWSCloudAccount(InstanceAssumeRole)Request",
      "example": {
        "creation_params": {
          "cloud_type": "AWS",
          "authentication_type": "instance_assume_role",
          "name": "DivvyCloud Development",
          "account_number": "0123456789012",
          "role_arn": "ARN_STRING_HERE",
          "duration": 3600,
          "session_name": "DivvyCloud"
        }
      },
      "type": "object",
      "properties": {
        "creation_params": {
          "$ref": "#/definitions/CreationParams1"
        }
      },
      "required": [
        "creation_params"
      ]
    },
    "CreationParams1": {
      "title": "CreationParams1",
      "type": "object",
      "properties": {
        "cloud_type": {
          "type": "string"
        },
        "authentication_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "role_arn": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "session_name": {
          "type": "string"
        }
      },
      "required": [
        "cloud_type",
        "authentication_type",
        "name",
        "account_number",
        "role_arn",
        "duration",
        "session_name"
      ]
    },
    "AddAWSCloudAccount(STSAssumeRole)Request": {
      "title": "AddAWSCloudAccount(STSAssumeRole)Request",
      "example": {
        "creation_params": {
          "cloud_type": "AWS",
          "authentication_type": "assume_role",
          "name": "DivvyCloud Development",
          "account_number": "0123456789012",
          "api_key": "AKIAKNDIVBSDVBKKSJ",
          "secret_key": "sdlkvnsdAKKNCKEN+sdkjcnvsdkvjsL",
          "role_arn": "ARN_STRING_HERE",
          "external_id": "only support if used",
          "duration": 3600,
          "session_name": "DivvyCloud"
        }
      },
      "type": "object",
      "properties": {
        "creation_params": {
          "$ref": "#/definitions/CreationParams2"
        }
      },
      "required": [
        "creation_params"
      ]
    },
    "CreationParams2": {
      "title": "CreationParams2",
      "type": "object",
      "properties": {
        "cloud_type": {
          "type": "string"
        },
        "authentication_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "api_key": {
          "type": "string"
        },
        "secret_key": {
          "type": "string"
        },
        "role_arn": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "session_name": {
          "type": "string"
        }
      },
      "required": [
        "cloud_type",
        "authentication_type",
        "name",
        "account_number",
        "api_key",
        "secret_key",
        "role_arn",
        "external_id",
        "duration",
        "session_name"
      ]
    },
    "AddGCPCloudAccountRequest": {
      "title": "AddGCPCloudAccountRequest",
      "example": {
        "creation_params": {
          "project": "peakfinder-994",
          "api_credentials": {
            "type": "service_account",
            "project_id": "peakfinder-994",
            "private_key_id": "129381238759081273fkjadnsf9",
            "private_key": "GCP_PRIVATE_KEY",
            "client_email": "admin-864@bond-007.iam.gserviceaccount.com",
            "client_id": "107180589690634961498",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://accounts.google.com/o/oauth2/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/admin-825%40peakfinder-994.iam.gserviceaccount.com"
          },
          "cloud_type": "GCE",
          "name": "GCP DivvyCloud  Development"
        }
      },
      "type": "object",
      "properties": {
        "creation_params": {
          "$ref": "#/definitions/CreationParams3"
        }
      },
      "required": [
        "creation_params"
      ]
    },
    "CreationParams3": {
      "title": "CreationParams3",
      "type": "object",
      "properties": {
        "project": {
          "type": "string"
        },
        "api_credentials": {
          "$ref": "#/definitions/ApiCredentials"
        },
        "cloud_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "project",
        "api_credentials",
        "cloud_type",
        "name"
      ]
    },
    "ApiCredentials": {
      "title": "ApiCredentials",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "private_key_id": {
          "type": "string"
        },
        "private_key": {
          "type": "string"
        },
        "client_email": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "auth_uri": {
          "type": "string"
        },
        "token_uri": {
          "type": "string"
        },
        "auth_provider_x509_cert_url": {
          "type": "string"
        },
        "client_x509_cert_url": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "project_id",
        "private_key_id",
        "private_key",
        "client_email",
        "client_id",
        "auth_uri",
        "token_uri",
        "auth_provider_x509_cert_url",
        "client_x509_cert_url"
      ]
    },
    "AddGCPCloudAccount": {
      "title": "AddGCPCloudAccount",
      "example": {
        "status": "REFRESH",
        "group_resource_id": "divvyorganizationservice:21",
        "name": "GCP DivvyCloud Staging",
        "resource_id": "divvyorganizationservice:21",
        "cloud_type_id": "GCE",
        "creation_time": "2017-10-25 19:46:22.015981",
        "id": 21
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "group_resource_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "cloud_type_id": {
          "type": "string"
        },
        "creation_time": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "group_resource_id",
        "name",
        "resource_id",
        "cloud_type_id",
        "creation_time",
        "id"
      ]
    },
    "AddAzureCloudAccountRequest": {
      "title": "AddAzureCloudAccountRequest",
      "example": {
        "creation_params": {
          "cloud_type": "AZURE_ARM",
          "name": "DivvyCloud Azure Development",
          "authentication_type": "standard",
          "tenant_id": "11111111-1111-1111-1111-11111111111",
          "app_id": "11111111-1111-1111-1111-11111111111",
          "subscription_id": "11111111-1111-1111-1111-11111111111",
          "api_key": "api_key"
        }
      },
      "type": "object",
      "properties": {
        "creation_params": {
          "$ref": "#/definitions/CreationParams4"
        }
      },
      "required": [
        "creation_params"
      ]
    },
    "CreationParams4": {
      "title": "CreationParams4",
      "type": "object",
      "properties": {
        "cloud_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "authentication_type": {
          "type": "string"
        },
        "tenant_id": {
          "type": "string"
        },
        "app_id": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "api_key": {
          "type": "string"
        }
      },
      "required": [
        "cloud_type",
        "name",
        "authentication_type",
        "tenant_id",
        "app_id",
        "subscription_id",
        "api_key"
      ]
    },
    "AddAzureCloudAccount": {
      "title": "AddAzureCloudAccount",
      "example": {
        "status": "REFRESH",
        "group_resource_id": "divvyorganizationservice:18",
        "name": "DivvyCloud Development",
        "resource_id": "divvyorganizationservice:18",
        "cloud_type_id": "AZURE_ARM",
        "creation_time": "2017-10-25 19:03:50.409391",
        "id": 18
      },
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "group_resource_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "cloud_type_id": {
          "type": "string"
        },
        "creation_time": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "group_resource_id",
        "name",
        "resource_id",
        "cloud_type_id",
        "creation_time",
        "id"
      ]
    },
    "CreateUserRequest": {
      "title": "CreateUserRequest",
      "example": {
        "name": "Boaty McBoatFace",
        "email": "boat@boatface.com",
        "username": "Boatface",
        "password": "password",
        "confirm_password": "password",
        "access_level": "BASIC_USER",
        "two_factor_required": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirm_password": {
          "type": "string"
        },
        "access_level": {
          "type": "string"
        },
        "two_factor_required": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "email",
        "username",
        "password",
        "confirm_password",
        "access_level",
        "two_factor_required"
      ]
    },
    "CreateUser": {
      "title": "CreateUser",
      "example": {
        "username": "jamessmith",
        "two_factor_enabled": false,
        "user_id": 7,
        "name": "James Smith",
        "resource_id": "divvyuser:7:",
        "two_factor_required": false,
        "organization_name": "Default Organization",
        "domain_admin": false,
        "email_address": "jamessmith@divvycloud.com",
        "organization_admin": false
      },
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "two_factor_enabled": {
          "type": "boolean"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "two_factor_required": {
          "type": "boolean"
        },
        "organization_name": {
          "type": "string"
        },
        "domain_admin": {
          "type": "boolean"
        },
        "email_address": {
          "type": "string"
        },
        "organization_admin": {
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "two_factor_enabled",
        "user_id",
        "name",
        "resource_id",
        "two_factor_required",
        "organization_name",
        "domain_admin",
        "email_address",
        "organization_admin"
      ]
    },
    "CreateInsightRequest": {
      "title": "CreateInsightRequest",
      "example": {
        "scopes": [],
        "resource_types": [
          "divvyorganizationservice"
        ],
        "name": "Identify all AWS Cloud Accounts",
        "description": "Identify all AWS Cloud Accounts without a password policy",
        "insight_id": null,
        "tags": [
          "security",
          "password policy"
        ],
        "severity": 2,
        "owner_resource_id": null,
        "organization_id": 1,
        "source": "custom",
        "meta_data": null,
        "notes": null,
        "filters": [
          {
            "config": {},
            "name": "divvy.query.clouds_without_password_policy"
          }
        ],
        "badge_filter_operator": null,
        "template_id": null,
        "badges": null
      },
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "insight_id": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "owner_resource_id": {
          "type": "string"
        },
        "organization_id": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "string"
        },
        "meta_data": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "badge_filter_operator": {
          "type": "string"
        },
        "template_id": {
          "type": "string"
        },
        "badges": {
          "type": "string"
        }
      },
      "required": [
        "scopes",
        "resource_types",
        "name",
        "description",
        "tags",
        "severity",
        "organization_id",
        "source",
        "filters"
      ]
    },
    "Filter": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "config": {
          "example": {},
          "type": "object"
        },
        "name": {
          "example": "divvy.query.clouds_without_password_policy",
          "type": "string"
        }
      },
      "required": [
        "config",
        "name"
      ]
    },
    "ListASGSupportedActions": {
      "title": "ListASGSupportedActions",
      "example": {
        "supported_actions": [
          "detach_instance_from_auto_scaling_group"
        ]
      },
      "type": "object",
      "properties": {
        "supported_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "supported_actions"
      ]
    },
    "DetachInstanceFromASGRequest": {
      "title": "DetachInstanceFromASGRequest",
      "example": {
        "instance": [
          "instance_resource_id",
          "instance_id"
        ],
        "decrement_capacity": "boolean"
      },
      "type": "object",
      "properties": {
        "instance": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "decrement_capacity": {
          "type": "string"
        }
      },
      "required": [
        "instance",
        "decrement_capacity"
      ]
    },
    "ListASGDetails": {
      "title": "ListASGDetails",
      "example": {
        "dependencies": {
          "instance": [
            {
              "id": "i-1234567",
              "name": "Sample Instance",
              "resource_id": "instance:1:us-east-1:i-1234567:",
              "type": "instance"
            }
          ],
          "privatesubnet": [
            {
              "id": "subnet-1234567",
              "name": "subnet-1234567",
              "resource_id": "privatesubnet:1:us-east-1:subnet-1234567:",
              "type": "privatesubnet"
            }
          ]
        },
        "details": {
          "autoscalinggroup": {
            "common": {
              "account": "Sample Account",
              "cloud": "GCP",
              "creation_timestamp": "None",
              "discovered_timestamp": "2017-10-17 18:45:07",
              "modified_timestamp": "2017-10-24 20:11:25",
              "noncompliance": [],
              "organization_service_id": 1,
              "properties": {
                "property_list": []
              },
              "region": "us-east-1",
              "resource_id": "autoscalinggroup:1:us-east-1:Sample-ASG:",
              "resource_name": "Sample-ASG",
              "resource_type": "autoscalinggroup"
            },
            "create_time": "2017-10-02 15:25:28",
            "default_cooldown": 0,
            "desired_capacity": 1,
            "group_id": "Sample-ASG",
            "health_check_grace_period": 0,
            "max_size": 1,
            "min_size": 0,
            "new_instance_protection": false
          },
          "resource_type": "autoscalinggroup"
        }
      },
      "type": "object",
      "properties": {
        "dependencies": {
          "$ref": "#/definitions/Dependencies"
        },
        "details": {
          "$ref": "#/definitions/Details"
        }
      },
      "required": [
        "dependencies",
        "details"
      ]
    },
    "Dependencies": {
      "title": "Dependencies",
      "type": "object",
      "properties": {
        "instance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "privatesubnet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Privatesubnet"
          }
        }
      },
      "required": [
        "instance",
        "privatesubnet"
      ]
    },
    "Instance": {
      "title": "Instance",
      "type": "object",
      "properties": {
        "id": {
          "example": "i-1234567",
          "type": "string"
        },
        "name": {
          "example": "Sample Instance",
          "type": "string"
        },
        "resource_id": {
          "example": "instance:1:us-east-1:i-1234567:",
          "type": "string"
        },
        "type": {
          "example": "instance",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "resource_id",
        "type"
      ]
    },
    "Privatesubnet": {
      "title": "Privatesubnet",
      "type": "object",
      "properties": {
        "id": {
          "example": "subnet-1234567",
          "type": "string"
        },
        "name": {
          "example": "subnet-1234567",
          "type": "string"
        },
        "resource_id": {
          "example": "privatesubnet:1:us-east-1:subnet-1234567:",
          "type": "string"
        },
        "type": {
          "example": "privatesubnet",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "resource_id",
        "type"
      ]
    },
    "Details": {
      "title": "Details",
      "type": "object",
      "properties": {
        "autoscalinggroup": {
          "$ref": "#/definitions/Autoscalinggroup"
        },
        "resource_type": {
          "type": "string"
        }
      },
      "required": [
        "autoscalinggroup",
        "resource_type"
      ]
    },
    "Autoscalinggroup": {
      "title": "Autoscalinggroup",
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common"
        },
        "create_time": {
          "type": "string"
        },
        "default_cooldown": {
          "type": "integer",
          "format": "int32"
        },
        "desired_capacity": {
          "type": "integer",
          "format": "int32"
        },
        "group_id": {
          "type": "string"
        },
        "health_check_grace_period": {
          "type": "integer",
          "format": "int32"
        },
        "max_size": {
          "type": "integer",
          "format": "int32"
        },
        "min_size": {
          "type": "integer",
          "format": "int32"
        },
        "new_instance_protection": {
          "type": "boolean"
        }
      },
      "required": [
        "common",
        "create_time",
        "default_cooldown",
        "desired_capacity",
        "group_id",
        "health_check_grace_period",
        "max_size",
        "min_size",
        "new_instance_protection"
      ]
    },
    "Common": {
      "title": "Common",
      "example": {
        "account": "Account #1",
        "resource_name": "sampleresourcename",
        "organization_service_id": 1,
        "resource_id": "routetable:1:us-west-2:rtb-routetable:",
        "region": "us-west-2",
        "modified_timestamp": "2017-10-17 18:42:11",
        "discovered_timestamp": "2017-10-17 18:42:11",
        "cloud": "AWS",
        "creation_timestamp": "None",
        "properties": {
          "property_list": []
        },
        "resource_type": "routetable",
        "noncompliance": []
      },
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "creation_timestamp": {
          "type": "string"
        },
        "discovered_timestamp": {
          "type": "string"
        },
        "modified_timestamp": {
          "type": "string"
        },
        "noncompliance": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_service_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "region": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "resource_name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string"
        }
      },
      "required": [
        "account",
        "cloud",
        "creation_timestamp",
        "discovered_timestamp",
        "modified_timestamp",
        "noncompliance",
        "organization_service_id",
        "properties",
        "region",
        "resource_id",
        "resource_name",
        "resource_type"
      ]
    },
    "Properties": {
      "title": "Properties",
      "example": {
        "property_list": []
      },
      "type": "object",
      "properties": {
        "property_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "property_list"
      ]
    },
    "UpdateCloudBadgesRequest": {
      "title": "UpdateCloudBadgesRequest",
      "example": {
        "target_resource_ids": [
          "org_resource_id"
        ],
        "badges": [
          {
            "key": "cloud",
            "value": "azure"
          },
          {
            "key": "env",
            "value": "production"
          }
        ]
      },
      "type": "object",
      "properties": {
        "target_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        }
      },
      "required": [
        "target_resource_ids",
        "badges"
      ]
    },
    "Badge": {
      "title": "Badge",
      "type": "object",
      "properties": {
        "key": {
          "example": "cloud",
          "type": "string"
        },
        "value": {
          "example": "azure",
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "ListResourceBadge": {
      "title": "ListResourceBadge",
      "example": {
        "value": "sample_value2",
        "key": "sampe_key2"
      },
      "type": "object",
      "properties": {
        "value": {
          "example": "sample_value2",
          "type": "string"
        },
        "key": {
          "example": "sampe_key2",
          "type": "string"
        }
      },
      "required": [
        "value",
        "key"
      ]
    },
    "CreateBadge(s)Request": {
      "title": "CreateBadge(s)Request",
      "example": {
        "target_resource_ids": [
          "divvyorganizationservice:3",
          "divvyorganizationservice:1"
        ],
        "badges": [
          {
            "key": "environment",
            "value": "development"
          },
          {
            "key": "user",
            "value": "basic"
          }
        ]
      },
      "type": "object",
      "properties": {
        "target_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        }
      },
      "required": [
        "target_resource_ids",
        "badges"
      ]
    },
    "DeleteBadgesRequest": {
      "title": "DeleteBadgesRequest",
      "example": {
        "target_resource_ids": [
          "divvyorganizationservice:3"
        ],
        "badges": [
          {
            "key": "environment",
            "value": "development"
          },
          {
            "key": "user",
            "value": "basic"
          }
        ]
      },
      "type": "object",
      "properties": {
        "target_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        }
      },
      "required": [
        "target_resource_ids",
        "badges"
      ]
    },
    "ListBotsRequest": {
      "title": "ListBotsRequest",
      "example": {
        "filters": [],
        "limit": 25,
        "offset": 0
      },
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "filters",
        "limit",
        "offset"
      ]
    },
    "CreatebotRequest": {
      "title": "CreatebotRequest",
      "example": {
        "name": "Example bot",
        "description": "Demo for API documentation",
        "severity": "low",
        "category": "Security",
        "ondemand_enabled": true,
        "state": "PAUSED",
        "instructions": {
          "resource_types": [
            "instance"
          ],
          "groups": [],
          "filters": [
            {
              "config": {
                "cores": 2
              },
              "name": "divvy.filter.instance_cores_exceeds_threshold"
            }
          ],
          "schedule": null,
          "schedule_description": null,
          "badges": [
            {
              "value": "wheat",
              "key": "grain"
            }
          ],
          "ondemand_enabled": true,
          "hookpoints": [],
          "actions": [
            {
              "run_when_result_is": true,
              "config": {
                "hours": 0
              },
              "name": "divvy.action.scheduled_stop"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "ondemand_enabled": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "instructions": {
          "$ref": "#/definitions/Instructions"
        }
      },
      "required": [
        "name",
        "description",
        "severity",
        "category",
        "ondemand_enabled",
        "state",
        "instructions"
      ]
    },
    "Instructions": {
      "title": "Instructions",
      "type": "object",
      "properties": {
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter1"
          }
        },
        "schedule": {
          "type": "string"
        },
        "schedule_description": {
          "type": "string"
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          }
        },
        "ondemand_enabled": {
          "type": "boolean"
        },
        "hookpoints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      },
      "required": [
        "resource_types",
        "groups",
        "filters",
        "badges",
        "ondemand_enabled",
        "hookpoints",
        "actions"
      ]
    },
    "Filter1": {
      "title": "Filter1",
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        },
        "name": {
          "example": "divvy.filter.instance_cores_exceeds_threshold",
          "type": "string"
        }
      },
      "required": [
        "config",
        "name"
      ]
    },
    "Config": {
      "title": "Config",
      "example": {
        "cores": 2
      },
      "type": "object",
      "properties": {
        "cores": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "cores"
      ]
    },
    "Action": {
      "title": "Action",
      "type": "object",
      "properties": {
        "run_when_result_is": {
          "example": true,
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/Config1"
        },
        "name": {
          "example": "divvy.action.scheduled_stop",
          "type": "string"
        }
      },
      "required": [
        "run_when_result_is",
        "config",
        "name"
      ]
    },
    "Config1": {
      "title": "Config1",
      "example": {
        "hours": 0
      },
      "type": "object",
      "properties": {
        "hours": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "hours"
      ]
    },
    "EditbotRequest": {
      "title": "EditbotRequest",
      "example": {
        "name": "Example bot edited",
        "description": "Demo for API documentation",
        "severity": "low",
        "category": "Security",
        "ondemand_enabled": true,
        "state": "PAUSED",
        "instructions": {
          "resource_types": [
            "instance"
          ],
          "groups": [],
          "filters": [
            {
              "config": {
                "cores": 2
              },
              "name": "divvy.filter.instance_cores_exceeds_threshold"
            }
          ],
          "schedule": null,
          "schedule_description": null,
          "badges": [
            {
              "value": "wheat",
              "key": "grain"
            }
          ],
          "ondemand_enabled": true,
          "hookpoints": [],
          "actions": [
            {
              "run_when_result_is": true,
              "config": {
                "hours": 0
              },
              "name": "divvy.action.scheduled_stop"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "ondemand_enabled": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "instructions": {
          "$ref": "#/definitions/Instructions"
        }
      },
      "required": [
        "name",
        "description",
        "severity",
        "category",
        "ondemand_enabled",
        "state",
        "instructions"
      ]
    },
    "ListCloudTypes": {
      "title": "ListCloudTypes",
      "example": {
        "clouds": [
          {
            "cloud_access": "public",
            "cloud_type_id": "AWS",
            "name": "Amazon Web Services"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "AWS_GOV",
            "name": "Amazon Web Services (GovCloud)"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "AZURE",
            "name": "Azure (Service Management)"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "AZURE_ARM",
            "name": "Azure (ARM)"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "DO",
            "name": "DigitalOcean"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "GCE",
            "name": "Google Cloud Platform"
          },
          {
            "cloud_access": "private",
            "cloud_type_id": "OS",
            "name": "OpenStack"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "RAX",
            "name": "Rackspace"
          },
          {
            "cloud_access": "public",
            "cloud_type_id": "SOFTLAYER",
            "name": "IBM SoftLayer"
          },
          {
            "cloud_access": "private",
            "cloud_type_id": "VCLOUD_DIRECTOR",
            "name": "VMware vCloud Director"
          },
          {
            "cloud_access": "private",
            "cloud_type_id": "VMWARE_VSPHERE",
            "name": "VMware vSphere"
          }
        ]
      },
      "type": "object",
      "properties": {
        "clouds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cloud"
          }
        }
      },
      "required": [
        "clouds"
      ]
    },
    "Cloud": {
      "title": "Cloud",
      "type": "object",
      "properties": {
        "cloud_access": {
          "example": "public",
          "type": "string"
        },
        "cloud_type_id": {
          "example": "AWS",
          "type": "string"
        },
        "name": {
          "example": "Amazon Web Services",
          "type": "string"
        }
      },
      "required": [
        "cloud_access",
        "cloud_type_id",
        "name"
      ]
    },
    "ListClouds": {
      "title": "ListClouds",
      "example": {
        "total_count": 1,
        "clouds": [
          {
            "status": "REFRESH",
            "group_resource_id": "samplegroupid",
            "name": "Sample Cloud",
            "resource_id": "sample_resource_id",
            "cloud_type_id": "AWS",
            "creation_time": "2017-10-17 18:37:30",
            "id": 1,
            "resources": 900
          }
        ]
      },
      "type": "object",
      "properties": {
        "total_count": {
          "type": "integer",
          "format": "int32"
        },
        "clouds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cloud1"
          }
        }
      },
      "required": [
        "total_count",
        "clouds"
      ]
    },
    "Cloud1": {
      "title": "Cloud1",
      "type": "object",
      "properties": {
        "status": {
          "example": "REFRESH",
          "type": "string"
        },
        "group_resource_id": {
          "example": "samplegroupid",
          "type": "string"
        },
        "name": {
          "example": "Sample Cloud",
          "type": "string"
        },
        "resource_id": {
          "example": "sample_resource_id",
          "type": "string"
        },
        "cloud_type_id": {
          "example": "AWS",
          "type": "string"
        },
        "creation_time": {
          "example": "2017-10-17 18:37:30",
          "type": "string"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "example": 900,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "group_resource_id",
        "name",
        "resource_id",
        "cloud_type_id",
        "creation_time",
        "id",
        "resources"
      ]
    },
    "ListProvisioningClouds": {
      "title": "ListProvisioningClouds",
      "example": {
        "clouds": [
          {
            "status": "REFRESH",
            "group_resource_id": "test_resource_id",
            "name": "Test Name",
            "resource_id": "test_resource_id",
            "cloud_type_id": "GCP",
            "creation_time": "2017-10-17 18:37:30",
            "id": 1
          }
        ]
      },
      "type": "object",
      "properties": {
        "clouds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cloud2"
          }
        }
      },
      "required": [
        "clouds"
      ]
    },
    "Cloud2": {
      "title": "Cloud2",
      "type": "object",
      "properties": {
        "status": {
          "example": "REFRESH",
          "type": "string"
        },
        "group_resource_id": {
          "example": "test_resource_id",
          "type": "string"
        },
        "name": {
          "example": "Test Name",
          "type": "string"
        },
        "resource_id": {
          "example": "test_resource_id",
          "type": "string"
        },
        "cloud_type_id": {
          "example": "GCP",
          "type": "string"
        },
        "creation_time": {
          "example": "2017-10-17 18:37:30",
          "type": "string"
        },
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "group_resource_id",
        "name",
        "resource_id",
        "cloud_type_id",
        "creation_time",
        "id"
      ]
    },
    "ListCloudRegions": {
      "title": "ListCloudRegions",
      "example": {
        "regions": [
          {
            "status": "ACTIVE",
            "id": "ap-northeast-1",
            "harvest_rate_multiplier": 1.0,
            "name": "ap-northeast-1",
            "resource_id": "serviceregion:1:ap-northeast-1:"
          },
          {
            "status": "ACTIVE",
            "id": "ap-northeast-2",
            "harvest_rate_multiplier": 1.0,
            "name": "ap-northeast-2",
            "resource_id": "serviceregion:1:ap-northeast-2:"
          },
          {
            "status": "ACTIVE",
            "id": "ap-south-1",
            "harvest_rate_multiplier": 1.0,
            "name": "ap-south-1",
            "resource_id": "serviceregion:1:ap-south-1:"
          },
          {
            "status": "ACTIVE",
            "id": "ap-southeast-1",
            "harvest_rate_multiplier": 1.0,
            "name": "ap-southeast-1",
            "resource_id": "serviceregion:1:ap-southeast-1:"
          },
          {
            "status": "ACTIVE",
            "id": "ap-southeast-2",
            "harvest_rate_multiplier": 1.0,
            "name": "ap-southeast-2",
            "resource_id": "serviceregion:1:ap-southeast-2:"
          },
          {
            "status": "ACTIVE",
            "id": "ca-central-1",
            "harvest_rate_multiplier": 1.0,
            "name": "ca-central-1",
            "resource_id": "serviceregion:1:ca-central-1:"
          },
          {
            "status": "ACTIVE",
            "id": "eu-central-1",
            "harvest_rate_multiplier": 1.0,
            "name": "eu-central-1",
            "resource_id": "serviceregion:1:eu-central-1:"
          },
          {
            "status": "ACTIVE",
            "id": "eu-west-1",
            "harvest_rate_multiplier": 1.0,
            "name": "eu-west-1",
            "resource_id": "serviceregion:1:eu-west-1:"
          },
          {
            "status": "ACTIVE",
            "id": "eu-west-2",
            "harvest_rate_multiplier": 1.0,
            "name": "eu-west-2",
            "resource_id": "serviceregion:1:eu-west-2:"
          },
          {
            "status": "ACTIVE",
            "id": "sa-east-1",
            "harvest_rate_multiplier": 1.0,
            "name": "sa-east-1",
            "resource_id": "serviceregion:1:sa-east-1:"
          },
          {
            "status": "ACTIVE",
            "id": "us-east-1",
            "harvest_rate_multiplier": 1.0,
            "name": "us-east-1",
            "resource_id": "serviceregion:1:us-east-1:"
          },
          {
            "status": "ACTIVE",
            "id": "us-east-2",
            "harvest_rate_multiplier": 1.0,
            "name": "us-east-2",
            "resource_id": "serviceregion:1:us-east-2:"
          },
          {
            "status": "ACTIVE",
            "id": "us-west-1",
            "harvest_rate_multiplier": 1.0,
            "name": "us-west-1",
            "resource_id": "serviceregion:1:us-west-1:"
          },
          {
            "status": "ACTIVE",
            "id": "us-west-2",
            "harvest_rate_multiplier": 1.0,
            "name": "us-west-2",
            "resource_id": "serviceregion:1:us-west-2:"
          }
        ]
      },
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      },
      "required": [
        "regions"
      ]
    },
    "Region": {
      "title": "Region",
      "type": "object",
      "properties": {
        "status": {
          "example": "ACTIVE",
          "type": "string"
        },
        "id": {
          "example": "ap-northeast-1",
          "type": "string"
        },
        "harvest_rate_multiplier": {
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "name": {
          "example": "ap-northeast-1",
          "type": "string"
        },
        "resource_id": {
          "example": "serviceregion:1:ap-northeast-1:",
          "type": "string"
        }
      },
      "required": [
        "status",
        "id",
        "harvest_rate_multiplier",
        "name",
        "resource_id"
      ]
    },
    "CreateHarvestingStrategyRequest": {
      "title": "CreateHarvestingStrategyRequest",
      "example": {
        "strategy_name": "Divvycloud",
        "cloud_type_id": "AWS"
      },
      "type": "object",
      "properties": {
        "strategy_name": {
          "type": "string"
        },
        "cloud_type_id": {
          "type": "string"
        }
      },
      "required": [
        "strategy_name",
        "cloud_type_id"
      ]
    },
    "CreateHarvestingStrategy": {
      "title": "CreateHarvestingStrategy",
      "example": {
        "strategy_id": 12
      },
      "type": "object",
      "properties": {
        "strategy_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "strategy_id"
      ]
    },
    "SetHarvestingStrategyCadenceRequest": {
      "title": "SetHarvestingStrategyCadenceRequest",
      "example": {
        "mapping": {
          "AWS:ServiceCertificateHarvest": {
            "defaultInterval": 60,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 10
          },
          "AWS:StorageContainerHarvester": {
            "defaultInterval": 30,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 5
          },
          "AWS:PasswordPolicyHarvester": {
            "defaultInterval": 240,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 40
          },
          "AWS:IdentitySummaryHarvester": {
            "defaultInterval": 240,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 40
          },
          "AWS:ServiceLimitHarvest": {
            "defaultInterval": 480,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 80
          },
          "AWS:AwsPlacementGroupHarvester": {
            "defaultInterval": 240,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 40
          },
          "AWS:IdentityProviderHarvester": {
            "defaultInterval": 240,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 40
          },
          "AWS:ServicePolicyHarvester": {
            "defaultInterval": 120,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 20
          },
          "AWS:ServiceUserHarvester": {
            "defaultInterval": 120,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 20
          },
          "AWS:ServiceCheckHarvest": {
            "defaultInterval": 120,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 20
          },
          "AWS:IdentityDetailHarvester": {
            "defaultInterval": 30,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 5
          },
          "AWS:ServiceRoleHarvester": {
            "defaultInterval": 120,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 20
          },
          "AWS:ServiceAccessKeyHarvest": {
            "defaultInterval": 360,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 60
          },
          "AWS:CloudAccountsHarvester": {
            "defaultInterval": 240,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 40
          },
          "AWS:RegionHarvester": {
            "defaultInterval": 480,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 80
          },
          "AWS:DnsZoneHarvester": {
            "defaultInterval": 180,
            "regions": [
              "global"
            ],
            "global": true,
            "changed": true,
            "interval": 30
          }
        },
        "copy_to": null
      },
      "type": "object",
      "properties": {
        "mapping": {
          "$ref": "#/definitions/Mapping"
        },
        "copy_to": {
          "type": "string"
        }
      },
      "required": [
        "mapping"
      ]
    },
    "Mapping": {
      "title": "Mapping",
      "type": "object",
      "properties": {
        "AWS:ServiceCertificateHarvest": {
          "$ref": "#/definitions/AWSServiceCertificateHarvest"
        },
        "AWS:StorageContainerHarvester": {
          "$ref": "#/definitions/AWSStorageContainerHarvester"
        },
        "AWS:PasswordPolicyHarvester": {
          "$ref": "#/definitions/AWSPasswordPolicyHarvester"
        },
        "AWS:IdentitySummaryHarvester": {
          "$ref": "#/definitions/AWSIdentitySummaryHarvester"
        },
        "AWS:ServiceLimitHarvest": {
          "$ref": "#/definitions/AWSServiceLimitHarvest"
        },
        "AWS:AwsPlacementGroupHarvester": {
          "$ref": "#/definitions/AWSAwsPlacementGroupHarvester"
        },
        "AWS:IdentityProviderHarvester": {
          "$ref": "#/definitions/AWSIdentityProviderHarvester"
        },
        "AWS:ServicePolicyHarvester": {
          "$ref": "#/definitions/AWSServicePolicyHarvester"
        },
        "AWS:ServiceUserHarvester": {
          "$ref": "#/definitions/AWSServiceUserHarvester"
        },
        "AWS:ServiceCheckHarvest": {
          "$ref": "#/definitions/AWSServiceCheckHarvest"
        },
        "AWS:IdentityDetailHarvester": {
          "$ref": "#/definitions/AWSIdentityDetailHarvester"
        },
        "AWS:ServiceRoleHarvester": {
          "$ref": "#/definitions/AWSServiceRoleHarvester"
        },
        "AWS:ServiceAccessKeyHarvest": {
          "$ref": "#/definitions/AWSServiceAccessKeyHarvest"
        },
        "AWS:CloudAccountsHarvester": {
          "$ref": "#/definitions/AWSCloudAccountsHarvester"
        },
        "AWS:RegionHarvester": {
          "$ref": "#/definitions/AWSRegionHarvester"
        },
        "AWS:DnsZoneHarvester": {
          "$ref": "#/definitions/AWSDnsZoneHarvester"
        }
      },
      "required": [
        "AWS:ServiceCertificateHarvest",
        "AWS:StorageContainerHarvester",
        "AWS:PasswordPolicyHarvester",
        "AWS:IdentitySummaryHarvester",
        "AWS:ServiceLimitHarvest",
        "AWS:AwsPlacementGroupHarvester",
        "AWS:IdentityProviderHarvester",
        "AWS:ServicePolicyHarvester",
        "AWS:ServiceUserHarvester",
        "AWS:ServiceCheckHarvest",
        "AWS:IdentityDetailHarvester",
        "AWS:ServiceRoleHarvester",
        "AWS:ServiceAccessKeyHarvest",
        "AWS:CloudAccountsHarvester",
        "AWS:RegionHarvester",
        "AWS:DnsZoneHarvester"
      ]
    },
    "AWSServiceCertificateHarvest": {
      "title": "AWSServiceCertificateHarvest",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSStorageContainerHarvester": {
      "title": "AWSStorageContainerHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSPasswordPolicyHarvester": {
      "title": "AWSPasswordPolicyHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSIdentitySummaryHarvester": {
      "title": "AWSIdentitySummaryHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServiceLimitHarvest": {
      "title": "AWSServiceLimitHarvest",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSAwsPlacementGroupHarvester": {
      "title": "AWSAwsPlacementGroupHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSIdentityProviderHarvester": {
      "title": "AWSIdentityProviderHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServicePolicyHarvester": {
      "title": "AWSServicePolicyHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServiceUserHarvester": {
      "title": "AWSServiceUserHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServiceCheckHarvest": {
      "title": "AWSServiceCheckHarvest",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSIdentityDetailHarvester": {
      "title": "AWSIdentityDetailHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServiceRoleHarvester": {
      "title": "AWSServiceRoleHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSServiceAccessKeyHarvest": {
      "title": "AWSServiceAccessKeyHarvest",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSCloudAccountsHarvester": {
      "title": "AWSCloudAccountsHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSRegionHarvester": {
      "title": "AWSRegionHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AWSDnsZoneHarvester": {
      "title": "AWSDnsZoneHarvester",
      "type": "object",
      "properties": {
        "defaultInterval": {
          "type": "integer",
          "format": "int32"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "changed": {
          "type": "boolean"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "defaultInterval",
        "regions",
        "global",
        "changed",
        "interval"
      ]
    },
    "AssignHarvestingStrategyRequest": {
      "title": "AssignHarvestingStrategyRequest",
      "example": {
        "organization_service_ids": [
          29
        ],
        "cloud_type_id": "AWS",
        "badges": []
      },
      "type": "object",
      "properties": {
        "organization_service_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "cloud_type_id": {
          "type": "string"
        },
        "badges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "organization_service_ids",
        "cloud_type_id",
        "badges"
      ]
    },
    "GetQueueStatus": {
      "title": "GetQueueStatus",
      "type": "object",
      "properties": {
        "p2": {
          "type": "integer",
          "format": "int32"
        },
        "p0": {
          "type": "integer",
          "format": "int32"
        },
        "p1": {
          "type": "integer",
          "format": "int32"
        },
        "slowest_jobs": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "process_time": {
          "$ref": "#/definitions/ProcessTime"
        },
        "workers": {
          "type": "integer",
          "format": "int32"
        },
        "queue_wait": {
          "$ref": "#/definitions/QueueWait"
        }
      },
      "required": [
        "p2",
        "p0",
        "p1",
        "slowest_jobs",
        "process_time",
        "workers",
        "queue_wait"
      ]
    },
    "ProcessTime": {
      "title": "ProcessTime",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "sum": {
          "type": "number",
          "format": "double"
        },
        "sumsq": {
          "type": "number",
          "format": "double"
        },
        "stddev": {
          "type": "number",
          "format": "double"
        },
        "average": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "count",
        "min",
        "max",
        "sum",
        "sumsq",
        "stddev",
        "average"
      ]
    },
    "QueueWait": {
      "title": "QueueWait",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "sum": {
          "type": "number",
          "format": "double"
        },
        "sumsq": {
          "type": "number",
          "format": "double"
        },
        "stddev": {
          "type": "number",
          "format": "double"
        },
        "average": {
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "count",
        "min",
        "max",
        "sum",
        "sumsq",
        "stddev",
        "average"
      ]
    },
    "AddProducerRequest": {
      "title": "AddProducerRequest",
      "example": {
        "organization_service_ids": [
          14
        ],
        "regions": [
          "us-east-1",
          "us-east-2",
          "us-west-1",
          "us-west-2",
          "eu-west-1",
          "eu-west-2",
          "eu-west-3",
          "eu-central-1",
          "ap-northeast-1",
          "ap-northeast-2",
          "ap-southeast-1",
          "ap-southeast-2",
          "sa-east-1",
          "ap-south-1",
          "ca-central-1",
          "eu-north-1"
        ],
        "resource_types": [
          "bigdatainstance",
          "autoscalinggroup",
          "autoscalinglaunchconfiguration",
          "instance",
          "volume",
          "snapshot",
          "storagecontainer",
          "resourceaccesslist",
          "loadbalancer",
          "privatenetwork",
          "privatesubnet",
          "secret",
          "serviceuser",
          "servicegroup",
          "servicerole",
          "serviceaccesskey",
          "serviceencryptionkey",
          "sshkeypair",
          "networkinterface",
          "internetgateway",
          "natgateway",
          "routetable",
          "servicepolicy",
          "dbinstance",
          "dbcluster",
          "dbsnapshot",
          "identityprovider",
          "serviceloggroup",
          "hypervisor",
          "networkflowlog",
          "networkpeer",
          "awsplacementgroup",
          "mcinstance",
          "esinstance",
          "notificationtopic",
          "notificationsubscription",
          "stacktemplate",
          "divvyorganizationservice",
          "restapikey"
        ],
        "enable_all_types": false,
        "propagate": {
          "by_badge": false,
          "badges": [],
          "by_consumer": false
        }
      },
      "type": "object",
      "properties": {
        "organization_service_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enable_all_types": {
          "type": "boolean"
        },
        "propagate": {
          "$ref": "#/definitions/Propagate"
        }
      },
      "required": [
        "organization_service_ids",
        "regions",
        "resource_types",
        "enable_all_types",
        "propagate"
      ]
    },
    "Propagate": {
      "title": "Propagate",
      "type": "object",
      "properties": {
        "by_badge": {
          "type": "boolean"
        },
        "badges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "by_consumer": {
          "type": "boolean"
        }
      },
      "required": [
        "by_badge",
        "badges",
        "by_consumer"
      ]
    },
    "ListConsumers": {
      "title": "ListConsumers",
      "example": {
        "consumers": [
          {
            "producers": 0,
            "errors": [],
            "organization_service_id": 10,
            "name": "Divvycloud - Consumer",
            "cloud_type_id": "AWS",
            "events": 38,
            "pending": false,
            "account_id": "1234567890"
          }
        ]
      },
      "type": "object",
      "properties": {
        "consumers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Consumer"
          }
        }
      },
      "required": [
        "consumers"
      ]
    },
    "Consumer": {
      "title": "Consumer",
      "type": "object",
      "properties": {
        "producers": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_service_id": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "example": "Divvycloud - Consumer",
          "type": "string"
        },
        "cloud_type_id": {
          "example": "AWS",
          "type": "string"
        },
        "events": {
          "example": 38,
          "type": "integer",
          "format": "int32"
        },
        "pending": {
          "example": false,
          "type": "boolean"
        },
        "account_id": {
          "example": "1234567890",
          "type": "string"
        }
      },
      "required": [
        "producers",
        "errors",
        "organization_service_id",
        "name",
        "cloud_type_id",
        "events",
        "pending",
        "account_id"
      ]
    },
    "RemoveProducerRequest": {
      "title": "RemoveProducerRequest",
      "example": {
        "resource_ids": [
          "divvyorganizationservice:14"
        ]
      },
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_ids"
      ]
    },
    "ListPolicies": {
      "title": "ListPolicies",
      "example": {
        "servicepolicies": [
          {
            "update_date": "2015-02-06 18:39:46",
            "create_date": "2015-02-06 18:39:46",
            "vendor_policy": true,
            "common": {
              "account": "My Account",
              "resource_name": "AdministratorAccess",
              "organization_service_id": 1,
              "resource_id": "servicepolicy:1:POIUYQETGDHSDGJ:",
              "modified_timestamp": "2017-10-17 18:40:31",
              "discovered_timestamp": "2017-10-17 18:40:31",
              "cloud": "AZURE",
              "creation_timestamp": "None",
              "properties": {
                "property_list": []
              },
              "resource_type": "servicepolicy",
              "noncompliance": []
            },
            "attachment_count": 3,
            "policy_id": "POIYUQETGDHSDGJ"
          }
        ]
      },
      "type": "object",
      "properties": {
        "servicepolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Servicepolicy"
          }
        }
      },
      "required": [
        "servicepolicies"
      ]
    },
    "Servicepolicy": {
      "title": "Servicepolicy",
      "type": "object",
      "properties": {
        "update_date": {
          "example": "2015-02-06 18:39:46",
          "type": "string"
        },
        "create_date": {
          "example": "2015-02-06 18:39:46",
          "type": "string"
        },
        "vendor_policy": {
          "example": true,
          "type": "boolean"
        },
        "common": {
          "$ref": "#/definitions/Common1"
        },
        "attachment_count": {
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "policy_id": {
          "example": "POIYUQETGDHSDGJ",
          "type": "string"
        }
      },
      "required": [
        "update_date",
        "create_date",
        "vendor_policy",
        "common",
        "attachment_count",
        "policy_id"
      ]
    },
    "Common1": {
      "title": "Common1",
      "example": {
        "account": "My Account",
        "resource_name": "AdministratorAccess",
        "organization_service_id": 1,
        "resource_id": "servicepolicy:1:POIUYQETGDHSDGJ:",
        "modified_timestamp": "2017-10-17 18:40:31",
        "discovered_timestamp": "2017-10-17 18:40:31",
        "cloud": "AZURE",
        "creation_timestamp": "None",
        "properties": {
          "property_list": []
        },
        "resource_type": "servicepolicy",
        "noncompliance": []
      },
      "type": "object",
      "properties": {
        "account": {
          "example": "My Account",
          "type": "string"
        },
        "resource_name": {
          "example": "AdministratorAccess",
          "type": "string"
        },
        "organization_service_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "resource_id": {
          "example": "servicepolicy:1:POIUYQETGDHSDGJ:",
          "type": "string"
        },
        "modified_timestamp": {
          "example": "2017-10-17 18:40:31",
          "type": "string"
        },
        "discovered_timestamp": {
          "example": "2017-10-17 18:40:31",
          "type": "string"
        },
        "cloud": {
          "example": "AZURE",
          "type": "string"
        },
        "creation_timestamp": {
          "example": "None",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "resource_type": {
          "example": "servicepolicy",
          "type": "string"
        },
        "noncompliance": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "account",
        "resource_name",
        "organization_service_id",
        "resource_id",
        "modified_timestamp",
        "discovered_timestamp",
        "cloud",
        "creation_timestamp",
        "properties",
        "resource_type",
        "noncompliance"
      ]
    },
    "ListAccessKeys": {
      "title": "ListAccessKeys",
      "example": {
        "serviceaccesskeys": [
          {
            "status": "active",
            "access_key_id": "SAMPLEACCESSKEY",
            "create_date": "2017-10-03 17:50:47",
            "last_used_date": "2017-10-03 19:25:00",
            "common": {
              "account": "My Account",
              "resource_name": "SAMPLERESOURCENAME",
              "organization_service_id": 1,
              "resource_id": "serviceaccesskey:1:SAMPLEACCESSKEY:",
              "modified_timestamp": "2017-10-24 20:16:50",
              "discovered_timestamp": "2017-10-17 18:39:22",
              "cloud": "AZURE",
              "creation_timestamp": "2017-10-03 17:50:47",
              "properties": {
                "property_list": []
              },
              "resource_type": "serviceaccesskey",
              "noncompliance": []
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "serviceaccesskeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Serviceaccesskey"
          }
        }
      },
      "required": [
        "serviceaccesskeys"
      ]
    },
    "Serviceaccesskey": {
      "title": "Serviceaccesskey",
      "type": "object",
      "properties": {
        "status": {
          "example": "active",
          "type": "string"
        },
        "access_key_id": {
          "example": "SAMPLEACCESSKEY",
          "type": "string"
        },
        "create_date": {
          "example": "2017-10-03 17:50:47",
          "type": "string"
        },
        "last_used_date": {
          "example": "2017-10-03 19:25:00",
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/Common1"
        }
      },
      "required": [
        "status",
        "access_key_id",
        "create_date",
        "last_used_date",
        "common"
      ]
    },
    "ListInsight": {
      "title": "ListInsight",
      "example": {
        "scopes": [],
        "timeseries": true,
        "tags": [
          "best practices",
          "high availability"
        ],
        "severity": 1,
        "timeseries_cache": 0,
        "organization_id": 1,
        "filters": [
          {
            "config": {},
            "name": "divvy.filter.database_instance_multi_az"
          }
        ],
        "owner_resource_id": null,
        "resource_types": [
          "dbinstance"
        ],
        "name": "Database Instance Not Multi-AZ",
        "insight_id": 2,
        "description": "Identify databases that are not configured across multiple availablity zones for resiliency",
        "template_id": 2
      },
      "type": "object",
      "properties": {
        "scopes": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeseries": {
          "example": true,
          "type": "boolean"
        },
        "tags": {
          "example": [
            "best practices",
            "high availability"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "timeseries_cache": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "organization_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "filters": {
          "example": [
            {
              "config": {},
              "name": "divvy.filter.database_instance_multi_az"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter3"
          }
        },
        "owner_resource_id": {
          "type": "string"
        },
        "resource_types": {
          "example": [
            "dbinstance"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "example": "Database Instance Not Multi-AZ",
          "type": "string"
        },
        "insight_id": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "example": "Identify databases that are not configured across multiple availablity zones for resiliency",
          "type": "string"
        },
        "template_id": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "scopes",
        "timeseries",
        "tags",
        "severity",
        "timeseries_cache",
        "organization_id",
        "filters",
        "resource_types",
        "name",
        "insight_id",
        "description",
        "template_id"
      ]
    },
    "Filter3": {
      "title": "Filter3",
      "example": {
        "config": {},
        "name": "divvy.filter.database_instance_multi_az"
      },
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/Config4"
        },
        "name": {
          "example": "divvy.filter.database_instance_multi_az",
          "type": "string"
        }
      },
      "required": [
        "config",
        "name"
      ]
    },
    "Config4": {
      "title": "Config4",
      "example": {},
      "type": "object",
      "properties": {
        "ignore_disabled": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "ListPack": {
      "title": "ListPack",
      "type": "object",
      "properties": {
        "backoffice_metadata": {
          "example": [
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Workspace Without Root Volume Encryption",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 137
            },
            {
              "description": "Transport Controls - §164.312(e)(2)(i)\n",
              "template_name": "Load Balancer Without SSL Listener",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 27
            },
            {
              "description": "Transport Controls - §164.312(e)(2)(i)\n",
              "template_name": "Load Balancer With SSL and HTTP Listener",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 98
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Database Instance Not Encrypted",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 23
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Volume Encryption Not Enabled",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 46
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Big Data Instance Encryption Not Enabled",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 28
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Storage Container Not Enforcing Encryption At Rest",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 60
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Volume Encryption Not Enabled With PHI Tags",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 77
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "API Accounting Config Without Encryption",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 68
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Snapshot With PHI Unencrypted",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 91
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "SSL Certificate Expired ",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 8
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Encryption Key Expired or Expiring Soon",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 25
            },
            {
              "description": "Audit Controls - 164.312(b)(2)",
              "template_name": "Cloud Account Without Global API Accounting Config",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 2
            },
            {
              "description": "Data Integrity - §164.312(c)(1)",
              "template_name": "API Accounting Config Log File Validation Disabled",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 58
            },
            {
              "description": "Access Control - §164.312(a)(1)",
              "template_name": "Cloud Account Without Root Account MFA Protection",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 20
            },
            {
              "description": "Access Control - §164.312(a)(1)",
              "template_name": "Cloud Root Account API Access Key Present",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 9
            },
            {
              "description": "Access Control - §164.312(a)(1)",
              "template_name": "Cloud User With Stale API Credentials",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 82
            },
            {
              "description": "Access Control - §164.312(a)(1)",
              "template_name": "API Key Inactive",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 41
            },
            {
              "description": "Audit Controls - 164.312(b)(2)",
              "template_name": "Storage Container Without Access Logging",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 90
            },
            {
              "description": "Audit Controls - 164.312(b)(2)",
              "template_name": "Load Balancer Access Logging Disabled",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 11
            },
            {
              "description": "Audit Controls - 164.312(b)(2)",
              "template_name": "API Accounting Config Not Logging",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 62
            },
            {
              "description": "Audit Controls - 164.312(b)(2)",
              "template_name": "Network Without Traffic Logging",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 34
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Workspace Without User Volume Encryption",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 138
            },
            {
              "description": "Encryption Controls - §164.312(a)(2)(iv)",
              "template_name": "Distributed Table Encryption Disabled",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 140
            },
            {
              "description": "Access Control - §164.312(a)(1)",
              "template_name": "Distributed Table Cluster Open to World",
              "pack_id": 1,
              "order": 0,
              "pack_name": "HIPAA",
              "template_id": 142
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackofficeMetadatum"
          }
        },
        "name": {
          "example": "HIPAA",
          "type": "string"
        },
        "inserted_at": {
          "example": "2017-12-06T20:38:01Z",
          "type": "string"
        },
        "backoffice": {
          "example": [
            28,
            77,
            60,
            90,
            11,
            140,
            34,
            68,
            91,
            138,
            98,
            23,
            46,
            137,
            82,
            27,
            8,
            25,
            9,
            20,
            142,
            58,
            2,
            41,
            62
          ],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pack_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "updated_at": {
          "example": "2018-03-04T18:36:44Z",
          "type": "string"
        },
        "custom": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "example": "backoffice",
          "type": "string"
        },
        "logo_url": {
          "example": "https://s3.amazonaws.com/get.divvycloud.com/assets/img/hippa.png",
          "type": "string"
        },
        "description": {
          "example": "Contains Insights which apply to HIPAA",
          "type": "string"
        },
        "organization_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "badge_filter_operator": {
          "type": "string"
        },
        "badges": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "backoffice",
        "pack_id",
        "custom",
        "source",
        "logo_url",
        "description"
      ]
    },
    "BackofficeMetadatum": {
      "title": "BackofficeMetadatum",
      "example": {
        "description": "Encryption Controls - §164.312(a)(2)(iv)",
        "template_name": "Workspace Without Root Volume Encryption",
        "pack_id": 1,
        "order": 0,
        "pack_name": "HIPAA",
        "template_id": 137
      },
      "type": "object",
      "properties": {
        "description": {
          "example": "Encryption Controls - §164.312(a)(2)(iv)",
          "type": "string"
        },
        "template_name": {
          "example": "Workspace Without Root Volume Encryption",
          "type": "string"
        },
        "pack_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "pack_name": {
          "example": "HIPAA",
          "type": "string"
        },
        "template_id": {
          "example": 137,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "description",
        "template_name",
        "pack_id",
        "order",
        "pack_name",
        "template_id"
      ]
    },
    "GetInsight": {
      "title": "GetInsight",
      "example": {
        "supported_clouds": [
          "AWS",
          "GCE",
          "AZURE_ARM",
          "AWS_GOV",
          "AWS_CHINA"
        ],
        "resource_types": [
          "dbinstance"
        ],
        "description": "Identify database instances with a retention policy that is too low",
        "insight_id": 5,
        "tags": [
          "best practices",
          "backup/recovery",
          "data retention"
        ],
        "notes": "## Overview\n\nRetention periods for databases should typically include a minimum of seven daily backups. This allows administrators to go back in time for data analysis/retrieval purposes if/when an issue arrises. This insight is provided to surface databases with a retention policy of less than seven. Users can copy this insight to make a custom insight that more appropriately reflects their specific thresholds. Note that databases with automated backups disabled will also be included in the results.\n\n### Remediation\n\n- Increase the database retention period. Note that doing this can result in downtime if done outside of the normal maintenance window. The retention can be set in a manual fashion or automated using the `Set Backup Retention` action.\n\n\n### Compliance Information\n  - NIST Cyber Security Framework (CSF): PR.IP-4\n  - GDPR: Article 30: Maintain Records of Processing Activities\n  - SOC 2: A1.2\n  - NIST 800-53: CP-9",
        "inserted_at": "2017-12-07T00:07:15Z",
        "resource_group_blacklist": [],
        "updated_at": "2018-08-05T15:49:22Z",
        "name": "Database Instance Retention Policy Too Low",
        "source": "backoffice",
        "meta_data": null,
        "filters": [
          {
            "config": {
              "days": 6
            },
            "name": "divvy.query.database_data_retention_policy_at_most"
          }
        ],
        "counts": {
          "cache_updated_at": "2019-03-06T19:31:49.628448",
          "results": 0,
          "by_resource_group": {},
          "by_type": {
            "dbinstance": 0
          },
          "duration": 0.007986,
          "by_cloud": {},
          "total": 0,
          "exemptions": 0
        },
        "custom_severity": null,
        "severity": 2
      },
      "type": "object",
      "properties": {
        "supported_clouds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "insight_id": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string"
        },
        "inserted_at": {
          "type": "string"
        },
        "resource_group_blacklist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "meta_data": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter4"
          }
        },
        "counts": {
          "$ref": "#/definitions/Counts"
        },
        "custom_severity": {
          "type": "string"
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "supported_clouds",
        "resource_types",
        "description",
        "insight_id",
        "tags",
        "notes",
        "inserted_at",
        "resource_group_blacklist",
        "updated_at",
        "name",
        "source",
        "filters",
        "counts",
        "severity"
      ]
    },
    "Filter4": {
      "title": "Filter4",
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/Config5"
        },
        "name": {
          "example": "divvy.query.database_data_retention_policy_at_most",
          "type": "string"
        }
      },
      "required": [
        "config",
        "name"
      ]
    },
    "Config5": {
      "title": "Config5",
      "example": {
        "days": 6
      },
      "type": "object",
      "properties": {
        "days": {
          "example": 6,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "days"
      ]
    },
    "Counts": {
      "title": "Counts",
      "type": "object",
      "properties": {
        "cache_updated_at": {
          "type": "string"
        },
        "results": {
          "type": "integer",
          "format": "int32"
        },
        "by_resource_group": {
          "type": "object"
        },
        "by_type": {
          "$ref": "#/definitions/ByType"
        },
        "duration": {
          "type": "number",
          "format": "double"
        },
        "by_cloud": {
          "type": "object"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "exemptions": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "cache_updated_at",
        "results",
        "by_resource_group",
        "by_type",
        "duration",
        "by_cloud",
        "total",
        "exemptions"
      ]
    },
    "ByType": {
      "title": "ByType",
      "type": "object",
      "properties": {
        "dbinstance": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "dbinstance"
      ]
    },
    "CreateInsightRequest1": {
      "title": "CreateInsightRequest1",
      "example": {
        "description": "Identify all AWS Cloud Accounts",
        "filters": [
          {
            "name": "divvy.query.sample_filter",
            "config": {}
          }
        ],
        "name": "AWS Cloud Accounts",
        "owner_resource_id": "",
        "resource_types": [
          "divvyorganizationservice"
        ],
        "scopes": [],
        "selects": [],
        "severity": 2,
        "tags": [
          "security",
          "cis controls",
          "password policy"
        ],
        "template_id": 90,
        "timeseries": true
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "name": {
          "type": "string"
        },
        "owner_resource_id": {
          "type": "string"
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template_id": {
          "type": "integer",
          "format": "int32"
        },
        "timeseries": {
          "type": "boolean"
        }
      },
      "required": [
        "description",
        "filters",
        "name",
        "owner_resource_id",
        "resource_types",
        "scopes",
        "selects",
        "severity",
        "tags",
        "template_id",
        "timeseries"
      ]
    },
    "EditInsightRequest": {
      "title": "EditInsightRequest",
      "example": {
        "description": "Identify cloud accounts which do not require special characters in the password",
        "filters": [
          {
            "name": "divvy.query.cloud_max_password_age",
            "config": {
              "password_age": 90
            }
          }
        ],
        "name": "Cloud Account Password Policy Maximum Age (90 Days)",
        "owner_resource_id": "",
        "resource_types": [
          "divvyorganizationservice"
        ],
        "scopes": [],
        "selects": [],
        "severity": 4,
        "tags": [
          "security",
          "cis controls",
          "password policy"
        ],
        "template_id": 95,
        "timeseries": true
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter6"
          }
        },
        "name": {
          "type": "string"
        },
        "owner_resource_id": {
          "type": "string"
        },
        "resource_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template_id": {
          "type": "integer",
          "format": "int32"
        },
        "timeseries": {
          "type": "boolean"
        }
      },
      "required": [
        "description",
        "filters",
        "name",
        "owner_resource_id",
        "resource_types",
        "scopes",
        "selects",
        "severity",
        "tags",
        "template_id",
        "timeseries"
      ]
    },
    "Filter6": {
      "title": "Filter6",
      "type": "object",
      "properties": {
        "name": {
          "example": "divvy.query.cloud_max_password_age",
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/Config6"
        }
      },
      "required": [
        "name",
        "config"
      ]
    },
    "Config6": {
      "title": "Config6",
      "example": {
        "password_age": 90
      },
      "type": "object",
      "properties": {
        "password_age": {
          "example": 90,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "password_age"
      ]
    },
    "ToggleInsightTimeseriesRequest": {
      "title": "ToggleInsightTimeseriesRequest",
      "example": {
        "insights": [
          {
            "description": "Identify cloud accounts which do not require special characters in the password",
            "filters": [
              {
                "name": "divvy.query.cloud_max_password_age",
                "config": {
                  "password_age": 90
                }
              }
            ],
            "name": "Cloud Account Password Policy Maximum Age (90 Days)",
            "owner_resource_id": "",
            "resource_types": [
              "divvyorganizationservice"
            ],
            "scopes": [],
            "selects": [],
            "severity": 4,
            "tags": [
              "security",
              "cis controls",
              "password policy"
            ],
            "template_id": 95,
            "timeseries": true
          },
          {
            "description": "Identify all AWS Cloud Accounts",
            "filters": [
              {
                "name": "divvy.query.sample_filter",
                "config": {}
              }
            ],
            "name": "AWS Cloud Accounts",
            "owner_resource_id": "",
            "resource_types": [
              "divvyorganizationservice"
            ],
            "scopes": [],
            "selects": [],
            "severity": 2,
            "tags": [
              "security",
              "cis controls",
              "password policy"
            ],
            "template_id": 90,
            "timeseries": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        }
      },
      "required": [
        "insights"
      ]
    },
    "Insight": {
      "title": "Insight",
      "type": "object",
      "properties": {
        "description": {
          "example": "Identify cloud accounts which do not require special characters in the password",
          "type": "string"
        },
        "filters": {
          "example": [
            {
              "name": "divvy.query.cloud_max_password_age",
              "config": {
                "password_age": 90
              }
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter7"
          }
        },
        "name": {
          "example": "Cloud Account Password Policy Maximum Age (90 Days)",
          "type": "string"
        },
        "owner_resource_id": {
          "type": "string"
        },
        "resource_types": {
          "example": [
            "divvyorganizationservice"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selects": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "example": [
            "security",
            "cis controls",
            "password policy"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template_id": {
          "example": 95,
          "type": "integer",
          "format": "int32"
        },
        "timeseries": {
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "description",
        "filters",
        "name",
        "owner_resource_id",
        "resource_types",
        "scopes",
        "selects",
        "severity",
        "tags",
        "template_id",
        "timeseries"
      ]
    },
    "Filter7": {
      "title": "Filter7",
      "example": {
        "name": "divvy.query.cloud_max_password_age",
        "config": {
          "password_age": 90
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "example": "divvy.query.cloud_max_password_age",
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/Config7"
        }
      },
      "required": [
        "name",
        "config"
      ]
    },
    "Config7": {
      "title": "Config7",
      "example": {
        "password_age": 90
      },
      "type": "object",
      "properties": {
        "password_age": {
          "example": 90,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateBulkRequest": {
      "title": "CreateBulkRequest",
      "example": {
        "insights": [
          {
            "description": "Identify cloud accounts which do not require special characters in the password",
            "filters": [
              {
                "name": "divvy.query.cloud_max_password_age",
                "config": {
                  "password_age": 90
                }
              }
            ],
            "name": "Cloud Account Password Policy Maximum Age (90 Days)",
            "owner_resource_id": "",
            "resource_types": [
              "divvyorganizationservice"
            ],
            "scopes": [],
            "selects": [],
            "severity": 4,
            "tags": [
              "security",
              "cis controls",
              "password policy"
            ],
            "template_id": 95,
            "timeseries": true
          },
          {
            "description": "Identify all AWS Cloud Accounts",
            "filters": [
              {
                "name": "divvy.query.sample_filter",
                "config": {}
              }
            ],
            "name": "AWS Cloud Accounts",
            "owner_resource_id": "",
            "resource_types": [
              "divvyorganizationservice"
            ],
            "scopes": [],
            "selects": [],
            "severity": 2,
            "tags": [
              "security",
              "cis controls",
              "password policy"
            ],
            "template_id": 90,
            "timeseries": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        }
      },
      "required": [
        "insights"
      ]
    },
    "BulkDeleteRequest": {
      "title": "BulkDeleteRequest",
      "example": {
        "insights": [
          4,
          5
        ]
      },
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "insights"
      ]
    },
    "EditMetadataRequest": {
      "title": "EditMetadataRequest",
      "example": {
        "backoffice": [],
        "custom": [
          16
        ],
        "pack_id": "custom:2",
        "metadata": "CentOS v7.5.1804"
      },
      "type": "object",
      "properties": {
        "backoffice": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "custom": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pack_id": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        }
      },
      "required": [
        "backoffice",
        "custom",
        "pack_id",
        "metadata"
      ]
    },
    "AttachPublicIPtoInstanceRequest": {
      "title": "AttachPublicIPtoInstanceRequest",
      "example": {
        "publicip_resource_id": "publicip:1:us-east-1:54.175.17.213:"
      },
      "type": "object",
      "properties": {
        "publicip_resource_id": {
          "type": "string"
        }
      },
      "required": [
        "publicip_resource_id"
      ]
    },
    "ListInstanceNetworkInterfaces": {
      "title": "ListInstanceNetworkInterfaces",
      "example": {
        "network_interfaces": [
          {
            "subnet_resource_id": "privatesubnet:1:us-east-1:subnet-123456:",
            "network_resource_id": "privatenetwork:1:us-east-1:vpc-98765:",
            "subnet_id": "subnet-121212",
            "ip_addresses": [
              {
                "ip_address_type": "Ipv4PrivateAddress",
                "ip_address": "000.00.00.00"
              }
            ],
            "device_index": 0,
            "instance_id": "i-98989898989",
            "network_interface_id": "eni-1234",
            "common": {
              "account": "Sample Account",
              "resource_name": "eni-sampleresource",
              "organization_service_id": 1,
              "availability_zone": "us-east-1b",
              "region": "us-east-1",
              "resource_id": "networkinterface:1:us-east-1:eni-1234:",
              "cloud": "AWS"
            },
            "mac_address": "11:99:44:33:22:rr",
            "instance_resource_id": "instance:1:us-east-1:i-98989898989:"
          }
        ]
      },
      "type": "object",
      "properties": {
        "network_interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          }
        }
      },
      "required": [
        "network_interfaces"
      ]
    },
    "NetworkInterface": {
      "title": "NetworkInterface",
      "type": "object",
      "properties": {
        "subnet_resource_id": {
          "example": "privatesubnet:1:us-east-1:subnet-123456:",
          "type": "string"
        },
        "network_resource_id": {
          "example": "privatenetwork:1:us-east-1:vpc-98765:",
          "type": "string"
        },
        "subnet_id": {
          "example": "subnet-121212",
          "type": "string"
        },
        "ip_addresses": {
          "example": [
            {
              "ip_address_type": "Ipv4PrivateAddress",
              "ip_address": "000.00.00.00"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpAddress"
          }
        },
        "device_index": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "instance_id": {
          "example": "i-98989898989",
          "type": "string"
        },
        "network_interface_id": {
          "example": "eni-1234",
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/Common3"
        },
        "mac_address": {
          "example": "11:99:44:33:22:rr",
          "type": "string"
        },
        "instance_resource_id": {
          "example": "instance:1:us-east-1:i-98989898989:",
          "type": "string"
        }
      },
      "required": [
        "subnet_resource_id",
        "network_resource_id",
        "subnet_id",
        "ip_addresses",
        "device_index",
        "instance_id",
        "network_interface_id",
        "common",
        "mac_address",
        "instance_resource_id"
      ]
    },
    "IpAddress": {
      "title": "IpAddress",
      "example": {
        "ip_address_type": "Ipv4PrivateAddress",
        "ip_address": "000.00.00.00"
      },
      "type": "object",
      "properties": {
        "ip_address_type": {
          "example": "Ipv4PrivateAddress",
          "type": "string"
        },
        "ip_address": {
          "example": "000.00.00.00",
          "type": "string"
        }
      },
      "required": [
        "ip_address_type",
        "ip_address"
      ]
    },
    "Common3": {
      "title": "Common3",
      "example": {
        "account": "Sample Account",
        "resource_name": "eni-sampleresource",
        "organization_service_id": 1,
        "availability_zone": "us-east-1b",
        "region": "us-east-1",
        "resource_id": "networkinterface:1:us-east-1:eni-1234:",
        "cloud": "AWS"
      },
      "type": "object",
      "properties": {
        "account": {
          "example": "Sample Account",
          "type": "string"
        },
        "resource_name": {
          "example": "eni-sampleresource",
          "type": "string"
        },
        "organization_service_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "availability_zone": {
          "example": "us-east-1b",
          "type": "string"
        },
        "region": {
          "example": "us-east-1",
          "type": "string"
        },
        "resource_id": {
          "example": "networkinterface:1:us-east-1:eni-1234:",
          "type": "string"
        },
        "cloud": {
          "example": "AWS",
          "type": "string"
        }
      },
      "required": [
        "account",
        "resource_name",
        "organization_service_id",
        "availability_zone",
        "region",
        "resource_id",
        "cloud"
      ]
    },
    "CreateImageSnapshotRequest": {
      "title": "CreateImageSnapshotRequest",
      "example": {
        "name": "Example Snapshot Name"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "AttachNetworkInterfaceRequest": {
      "title": "AttachNetworkInterfaceRequest",
      "example": {
        "device_index": "1"
      },
      "type": "object",
      "properties": {
        "device_index": {
          "type": "string"
        }
      },
      "required": [
        "device_index"
      ]
    },
    "ListRouteTables": {
      "title": "ListRouteTables",
      "example": {
        "routetables": [
          {
            "network_resource_id": "privatenetwork:1:us-west-2:vpc-1111111111:",
            "network_id": "vpc-111111111",
            "vpc_association_id": "sampleassociationid",
            "subnet_count": 0,
            "common": {
              "account": "Account #1",
              "resource_name": "sampleresourcename",
              "organization_service_id": 1,
              "resource_id": "routetable:1:us-west-2:rtb-routetable:",
              "region": "us-west-2",
              "modified_timestamp": "2017-10-17 18:42:11",
              "discovered_timestamp": "2017-10-17 18:42:11",
              "cloud": "AWS",
              "creation_timestamp": "None",
              "properties": {
                "property_list": []
              },
              "resource_type": "routetable",
              "noncompliance": []
            },
            "route_table_id": "rtb-routetable",
            "main": "Yes",
            "route_count": 1,
            "properties": {
              "property_list": []
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "routetables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Routetable"
          }
        }
      },
      "required": [
        "routetables"
      ]
    },
    "Routetable": {
      "title": "Routetable",
      "type": "object",
      "properties": {
        "network_resource_id": {
          "example": "privatenetwork:1:us-west-2:vpc-1111111111:",
          "type": "string"
        },
        "network_id": {
          "example": "vpc-111111111",
          "type": "string"
        },
        "vpc_association_id": {
          "example": "sampleassociationid",
          "type": "string"
        },
        "subnet_count": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "common": {
          "$ref": "#/definitions/Common"
        },
        "route_table_id": {
          "example": "rtb-routetable",
          "type": "string"
        },
        "main": {
          "example": "Yes",
          "type": "string"
        },
        "route_count": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        }
      },
      "required": [
        "network_resource_id",
        "network_id",
        "vpc_association_id",
        "subnet_count",
        "common",
        "route_table_id",
        "main",
        "route_count",
        "properties"
      ]
    },
    "ListRouteTable": {
      "title": "ListRouteTable",
      "example": {
        "routes": [
          {
            "target_id": "zhs-6d1efff8",
            "target_type": "gateway",
            "state": "active",
            "common": {
              "account": "Test Account",
              "organization_service_id": 3,
              "region": "ap-northeast-1",
              "cloud": "Test Cloud",
              "resource_id": "route:1:ap-northeast-1:rtb-55885e32:0.0.0.0%133G1:"
            },
            "route_table_id": "rtb-55885e32",
            "cidr": "0.0.0.0/0"
          }
        ]
      },
      "type": "object",
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          }
        }
      },
      "required": [
        "routes"
      ]
    },
    "Route": {
      "title": "Route",
      "type": "object",
      "properties": {
        "target_id": {
          "example": "zhs-6d1efff8",
          "type": "string"
        },
        "target_type": {
          "example": "gateway",
          "type": "string"
        },
        "state": {
          "example": "active",
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/Common5"
        },
        "route_table_id": {
          "example": "rtb-55885e32",
          "type": "string"
        },
        "cidr": {
          "example": "0.0.0.0/0",
          "type": "string"
        }
      },
      "required": [
        "target_id",
        "target_type",
        "state",
        "common",
        "route_table_id",
        "cidr"
      ]
    },
    "Common5": {
      "title": "Common5",
      "example": {
        "account": "Test Account",
        "organization_service_id": 3,
        "region": "ap-northeast-1",
        "cloud": "Test Cloud",
        "resource_id": "route:1:ap-northeast-1:rtb-55885e32:0.0.0.0%133G1:"
      },
      "type": "object",
      "properties": {
        "account": {
          "example": "Test Account",
          "type": "string"
        },
        "organization_service_id": {
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "example": "ap-northeast-1",
          "type": "string"
        },
        "cloud": {
          "example": "Test Cloud",
          "type": "string"
        },
        "resource_id": {
          "example": "route:1:ap-northeast-1:rtb-55885e32:0.0.0.0%133G1:",
          "type": "string"
        }
      },
      "required": [
        "account",
        "organization_service_id",
        "region",
        "cloud",
        "resource_id"
      ]
    },
    "Listorganizations.": {
      "title": "Listorganizations.",
      "example": {
        "organization_id": 1,
        "name": "Default Organization"
      },
      "type": "object",
      "properties": {
        "organization_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "example": "Default Organization",
          "type": "string"
        }
      },
      "required": [
        "organization_id",
        "name"
      ]
    },
    "CreateneworganizationRequest": {
      "title": "CreateneworganizationRequest",
      "example": {
        "organization_name": "Placeholder Name"
      },
      "type": "object",
      "properties": {
        "organization_name": {
          "type": "string"
        }
      },
      "required": [
        "organization_name"
      ]
    },
    "SwitchorganizationRequest": {
      "title": "SwitchorganizationRequest",
      "example": {
        "organization_name": "Placeholder Name"
      },
      "type": "object",
      "properties": {
        "organization_name": {
          "type": "string"
        }
      },
      "required": [
        "organization_name"
      ]
    },
    "EditorganizationnameRequest": {
      "title": "EditorganizationnameRequest",
      "example": {
        "organization_name": "New Name"
      },
      "type": "object",
      "properties": {
        "organization_name": {
          "type": "string"
        }
      },
      "required": [
        "organization_name"
      ]
    },
    "ListRulesRequest": {
      "title": "ListRulesRequest",
      "example": {
        "direction": "ingress"
      },
      "type": "object",
      "properties": {
        "direction": {
          "type": "string"
        }
      },
      "required": [
        "direction"
      ]
    },
    "ListRules": {
      "title": "ListRules",
      "example": {
        "rules": [
          {
            "rule_action": "allow",
            "direction": "ingress",
            "ip_protocol": "all",
            "source_network": "0.0.0.0/0",
            "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
            "source_port_specification": "0-65535",
            "access_list": {
              "resource_name": "acl-1234567",
              "resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:"
            },
            "priority": 100,
            "is_temporary": false,
            "common": {
              "account": "Example Account",
              "resource_name": "acl-1234567",
              "organization_service_id": 1,
              "resource_id": "resourceaccesslistrule:1:ap-northeast-1:examplelistrulenumber:",
              "region": "ap-northeast-1",
              "modified_timestamp": "2017-10-17 18:38:24",
              "discovered_timestamp": "2017-10-17 18:38:24",
              "cloud": "AWS",
              "creation_timestamp": "None",
              "properties": {
                "property_list": [
                  {
                    "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
                    "name": "divvy.subnet_associations",
                    "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
                  }
                ]
              },
              "resource_type": "resourceaccesslistrule",
              "noncompliance": []
            },
            "access_list_type": "network_acl",
            "properties": {
              "property_list": []
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        }
      },
      "required": [
        "rules"
      ]
    },
    "Rule": {
      "title": "Rule",
      "type": "object",
      "properties": {
        "rule_action": {
          "example": "allow",
          "type": "string"
        },
        "direction": {
          "example": "ingress",
          "type": "string"
        },
        "ip_protocol": {
          "example": "all",
          "type": "string"
        },
        "source_network": {
          "example": "0.0.0.0/0",
          "type": "string"
        },
        "parent_resource_id": {
          "example": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
          "type": "string"
        },
        "source_port_specification": {
          "example": "0-65535",
          "type": "string"
        },
        "access_list": {
          "$ref": "#/definitions/AccessList"
        },
        "priority": {
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "is_temporary": {
          "example": false,
          "type": "boolean"
        },
        "common": {
          "$ref": "#/definitions/Common6"
        },
        "access_list_type": {
          "example": "network_acl",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        }
      },
      "required": [
        "rule_action",
        "direction",
        "ip_protocol",
        "source_network",
        "parent_resource_id",
        "source_port_specification",
        "access_list",
        "priority",
        "is_temporary",
        "common",
        "access_list_type",
        "properties"
      ]
    },
    "AccessList": {
      "title": "AccessList",
      "example": {
        "resource_name": "acl-1234567",
        "resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:"
      },
      "type": "object",
      "properties": {
        "resource_name": {
          "example": "acl-1234567",
          "type": "string"
        },
        "resource_id": {
          "example": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
          "type": "string"
        }
      },
      "required": [
        "resource_name",
        "resource_id"
      ]
    },
    "Common6": {
      "title": "Common6",
      "example": {
        "account": "Example Account",
        "resource_name": "acl-1234567",
        "organization_service_id": 1,
        "resource_id": "resourceaccesslistrule:1:ap-northeast-1:examplelistrulenumber:",
        "region": "ap-northeast-1",
        "modified_timestamp": "2017-10-17 18:38:24",
        "discovered_timestamp": "2017-10-17 18:38:24",
        "cloud": "AWS",
        "creation_timestamp": "None",
        "properties": {
          "property_list": [
            {
              "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
              "name": "divvy.subnet_associations",
              "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
            }
          ]
        },
        "resource_type": "resourceaccesslistrule",
        "noncompliance": []
      },
      "type": "object",
      "properties": {
        "account": {
          "example": "Example Account",
          "type": "string"
        },
        "resource_name": {
          "example": "acl-1234567",
          "type": "string"
        },
        "organization_service_id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "resource_id": {
          "example": "resourceaccesslistrule:1:ap-northeast-1:examplelistrulenumber:",
          "type": "string"
        },
        "region": {
          "example": "ap-northeast-1",
          "type": "string"
        },
        "modified_timestamp": {
          "example": "2017-10-17 18:38:24",
          "type": "string"
        },
        "discovered_timestamp": {
          "example": "2017-10-17 18:38:24",
          "type": "string"
        },
        "cloud": {
          "example": "AWS",
          "type": "string"
        },
        "creation_timestamp": {
          "example": "None",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Properties5"
        },
        "resource_type": {
          "example": "resourceaccesslistrule",
          "type": "string"
        },
        "noncompliance": {
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "account",
        "resource_name",
        "organization_service_id",
        "resource_id",
        "region",
        "modified_timestamp",
        "discovered_timestamp",
        "cloud",
        "creation_timestamp",
        "properties",
        "resource_type",
        "noncompliance"
      ]
    },
    "Properties5": {
      "title": "Properties5",
      "example": {
        "property_list": [
          {
            "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
            "name": "divvy.subnet_associations",
            "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
          }
        ]
      },
      "type": "object",
      "properties": {
        "property_list": {
          "example": [
            {
              "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
              "name": "divvy.subnet_associations",
              "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyList"
          }
        }
      },
      "required": [
        "property_list"
      ]
    },
    "PropertyList": {
      "title": "PropertyList",
      "example": {
        "parent_resource_id": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
        "name": "divvy.subnet_associations",
        "value": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}"
      },
      "type": "object",
      "properties": {
        "parent_resource_id": {
          "example": "resourceaccesslist:1:ap-northeast-1:acl-1234567:",
          "type": "string"
        },
        "name": {
          "example": "divvy.subnet_associations",
          "type": "string"
        },
        "value": {
          "example": "{\"privatesubnet:1:ap-northeast-1:subnet-2323232:\": \"aclassoc-12121212\", \"privatesubnet:1:ap-northeast-1:subnet-3434343:\": \"aclassoc-9898989\"}",
          "type": "string"
        }
      },
      "required": [
        "parent_resource_id",
        "name",
        "value"
      ]
    },
    "CreateResourceGroup-PublicRequest": {
      "title": "CreateResourceGroup-PublicRequest",
      "example": {
        "group_name": "Test Resource Group",
        "group_description": "Would you believe it's for grouping things?",
        "group_category": "system"
      },
      "type": "object",
      "properties": {
        "group_name": {
          "type": "string"
        },
        "group_description": {
          "type": "string"
        },
        "group_category": {
          "type": "string"
        }
      },
      "required": [
        "group_name",
        "group_description",
        "group_category"
      ]
    },
    "CreateResourceGroup": {
      "title": "CreateResourceGroup",
      "example": {
        "category": "system",
        "description": "Would you believe it's for grouping things?",
        "creation_time": "2017-10-25 13:36:59",
        "nested_resource_groups": [],
        "owner_type": "organization",
        "id": "resourcegroup:3:",
        "group_type": "user",
        "name": "Test Resource Group"
      },
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "creation_time": {
          "type": "string"
        },
        "nested_resource_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "group_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "category",
        "description",
        "creation_time",
        "nested_resource_groups",
        "owner_type",
        "id",
        "group_type",
        "name"
      ]
    },
    "AddResourcetoResourceGroupRequest": {
      "title": "AddResourcetoResourceGroupRequest",
      "example": {
        "resource_group_ids": [
          "resourcegroup:3:"
        ],
        "resource_ids": [
          "instance:24:us-east-2:i-03beb3f6c5aac378c:"
        ]
      },
      "type": "object",
      "properties": {
        "resource_group_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_group_ids",
        "resource_ids"
      ]
    },
    "AddResourcetoResourceGroup": {
      "title": "AddResourcetoResourceGroup",
      "example": {
        "resource_ids": [
          "instance:24:us-east-2:i-03beb3f6c5aac378c:"
        ]
      },
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_ids"
      ]
    },
    "DetailResource": {
      "title": "DetailResource",
      "example": {
        "dependencies": {},
        "details": {
          "resource_type": "storagecontainer",
          "storagecontainer": {
            "common": {
              "account": "Chef's Cloud Acct",
              "cloud": "AWS",
              "creation_timestamp": "2017-09-26 16:17:45",
              "discovered_timestamp": "2017-09-26 16:26:08",
              "modified_timestamp": "2017-10-24 23:12:00",
              "noncompliance": [
                {
                  "reporter_resource_id": "divvybot:1:21",
                  "resource_id": "storagecontainer:2:us-east-1:storagecontainer:"
                },
                {
                  "reporter_resource_id": "divvybot:1:41",
                  "resource_id": "storagecontainer:2:us-east-1:storagecontainer:"
                }
              ],
              "organization_service_id": 2,
              "properties": {
                "property_list": []
              },
              "region": "us-east-1",
              "resource_id": "storagecontainer:2:us-east-1:storagecontainer:",
              "resource_name": "storagecontainer",
              "resource_type": "storagecontainer"
            },
            "creation_date": "2017-09-26 16:17:45",
            "encrypted": true,
            "object_count": 0,
            "total_size": 0
          }
        }
      },
      "type": "object",
      "properties": {
        "dependencies": {
          "type": "object"
        },
        "details": {
          "$ref": "#/definitions/Details1"
        }
      },
      "required": [
        "dependencies",
        "details"
      ]
    },
    "Details1": {
      "title": "Details1",
      "type": "object",
      "properties": {
        "resource_type": {
          "type": "string"
        },
        "storagecontainer": {
          "$ref": "#/definitions/Storagecontainer"
        }
      },
      "required": [
        "resource_type",
        "storagecontainer"
      ]
    },
    "Storagecontainer": {
      "title": "Storagecontainer",
      "type": "object",
      "properties": {
        "common": {
          "$ref": "#/definitions/Common7"
        },
        "creation_date": {
          "type": "string"
        },
        "encrypted": {
          "type": "boolean"
        },
        "object_count": {
          "type": "integer",
          "format": "int32"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "common",
        "creation_date",
        "encrypted",
        "object_count",
        "total_size"
      ]
    },
    "Common7": {
      "title": "Common7",
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "cloud": {
          "type": "string"
        },
        "creation_timestamp": {
          "type": "string"
        },
        "discovered_timestamp": {
          "type": "string"
        },
        "modified_timestamp": {
          "type": "string"
        },
        "noncompliance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Noncompliance"
          }
        },
        "organization_service_id": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "$ref": "#/definitions/Properties"
        },
        "region": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "resource_name": {
          "type": "string"
        },
        "resource_type": {
          "type": "string"
        }
      },
      "required": [
        "account",
        "cloud",
        "creation_timestamp",
        "discovered_timestamp",
        "modified_timestamp",
        "noncompliance",
        "organization_service_id",
        "properties",
        "region",
        "resource_id",
        "resource_name",
        "resource_type"
      ]
    },
    "Noncompliance": {
      "title": "Noncompliance",
      "type": "object",
      "properties": {
        "reporter_resource_id": {
          "example": "divvybot:1:21",
          "type": "string"
        },
        "resource_id": {
          "example": "storagecontainer:2:us-east-1:storagecontainer:",
          "type": "string"
        }
      },
      "required": [
        "reporter_resource_id",
        "resource_id"
      ]
    },
    "GetResourceNotes": {
      "title": "GetResourceNotes",
      "example": {
        "resource_notes": []
      },
      "type": "object",
      "properties": {
        "resource_notes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_notes"
      ]
    },
    "CreateResourceNoteRequest": {
      "title": "CreateResourceNoteRequest",
      "example": {
        "note_text": "Example of a note text."
      },
      "type": "object",
      "properties": {
        "note_text": {
          "type": "string"
        }
      },
      "required": [
        "note_text"
      ]
    },
    "ListResourceTags": {
      "title": "ListResourceTags",
      "example": {
        "resource_tags": [
          {
            "key": "divvy-2038",
            "value": "bot"
          }
        ]
      },
      "type": "object",
      "properties": {
        "resource_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceTag"
          }
        }
      },
      "required": [
        "resource_tags"
      ]
    },
    "ResourceTag": {
      "title": "ResourceTag",
      "type": "object",
      "properties": {
        "key": {
          "example": "divvy-2038",
          "type": "string"
        },
        "value": {
          "example": "bot",
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "ListResourceSettings": {
      "title": "ListResourceSettings",
      "example": {
        "setting_list": []
      },
      "type": "object",
      "properties": {
        "setting_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "setting_list"
      ]
    },
    "GetResourceAssociations": {
      "title": "GetResourceAssociations",
      "example": {
        "resource_groups": [
          {
            "name": "test",
            "owner_type": "organization",
            "owner_resource_id": "divvyuser:1:",
            "group_type": "user",
            "id": "resourcegroup:3:"
          }
        ]
      },
      "type": "object",
      "properties": {
        "resource_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        }
      },
      "required": [
        "resource_groups"
      ]
    },
    "ResourceGroup": {
      "title": "ResourceGroup",
      "type": "object",
      "properties": {
        "name": {
          "example": "test",
          "type": "string"
        },
        "owner_type": {
          "example": "organization",
          "type": "string"
        },
        "owner_resource_id": {
          "example": "divvyuser:1:",
          "type": "string"
        },
        "group_type": {
          "example": "user",
          "type": "string"
        },
        "id": {
          "example": "resourcegroup:3:",
          "type": "string"
        }
      },
      "required": [
        "name",
        "owner_type",
        "owner_resource_id",
        "group_type",
        "id"
      ]
    },
    "SetResourceOwnerRequest": {
      "title": "SetResourceOwnerRequest",
      "example": {
        "resource_ids": [
          "{{resource_id}}"
        ]
      },
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_ids"
      ]
    },
    "QueryResourcesRequest": {
      "title": "QueryResourcesRequest",
      "example": {
        "scopes": [],
        "filters": [],
        "offset": 0,
        "limit": 25,
        "order_by": ""
      },
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "order_by": {
          "type": "string"
        }
      },
      "required": [
        "scopes",
        "filters",
        "offset",
        "limit",
        "order_by"
      ]
    },
    "QueryResources": {
      "title": "QueryResources",
      "example": {
        "scopes": [],
        "limit": 25,
        "filters": [],
        "offset": 0,
        "order_by": "",
        "counts": {
          "serviceaccesskey": 34,
          "serviceencryptionkey": 0,
          "servicecertificate": 4,
          "servicerole": 29,
          "networkpeer": 1,
          "networkinterface": 143,
          "mcsnapshot": 0,
          "serviceuser": 32,
          "servicegroup": 4,
          "networkflowlog": 8,
          "divvyorganizationservice": 6,
          "servicepolicy": 907,
          "privatesubnet": 186,
          "publicip": 34,
          "instance": 67,
          "bigdatasnapshot": 9,
          "resourceaccesslist": 292,
          "servicealarm": 2,
          "resourceaccesslistrule": 785,
          "instancereservation": 0,
          "storagecontainer": 54,
          "volume": 101,
          "internetgateway": 54,
          "bigdatainstance": 2,
          "dbinstance": 16,
          "privatenetwork": 73,
          "mcinstance": 3,
          "dbsnapshot": 135,
          "hypervisor": 0,
          "routetable": 78,
          "privateimage": 106,
          "dnszone": 5,
          "snapshot": 160,
          "serviceregion": 92,
          "apiaccountingconfig": 3,
          "sshkeypair": 55,
          "loadbalancer": 10
        },
        "selected_resource_type": null,
        "resources": [],
        "supported_types": [
          "instance",
          "volume",
          "snapshot",
          "serviceuser",
          "servicegroup",
          "servicerole",
          "servicepolicy",
          "servicecertificate",
          "bigdatainstance",
          "dbinstance",
          "internetgateway",
          "mcinstance",
          "resourceaccesslist",
          "resourceaccesslistrule",
          "storagecontainer",
          "privateimage",
          "privatenetwork",
          "privatesubnet",
          "networkflowlog",
          "networkinterface",
          "networkpeer",
          "publicip",
          "loadbalancer",
          "instancereservation",
          "dbsnapshot",
          "mcsnapshot",
          "bigdatasnapshot",
          "routetable",
          "hypervisor",
          "apiaccountingconfig",
          "serviceaccesskey",
          "serviceencryptionkey",
          "divvyorganizationservice",
          "servicealarm",
          "serviceregion",
          "sshkeypair",
          "dnszone"
        ]
      },
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "order_by": {
          "type": "string"
        },
        "counts": {
          "$ref": "#/definitions/Counts1"
        },
        "selected_resource_type": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supported_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "scopes",
        "limit",
        "filters",
        "offset",
        "order_by",
        "counts",
        "resources",
        "supported_types"
      ]
    },
    "Counts1": {
      "title": "Counts1",
      "type": "object",
      "properties": {
        "serviceaccesskey": {
          "type": "integer",
          "format": "int32"
        },
        "serviceencryptionkey": {
          "type": "integer",
          "format": "int32"
        },
        "servicecertificate": {
          "type": "integer",
          "format": "int32"
        },
        "servicerole": {
          "type": "integer",
          "format": "int32"
        },
        "networkpeer": {
          "type": "integer",
          "format": "int32"
        },
        "networkinterface": {
          "type": "integer",
          "format": "int32"
        },
        "mcsnapshot": {
          "type": "integer",
          "format": "int32"
        },
        "serviceuser": {
          "type": "integer",
          "format": "int32"
        },
        "servicegroup": {
          "type": "integer",
          "format": "int32"
        },
        "networkflowlog": {
          "type": "integer",
          "format": "int32"
        },
        "divvyorganizationservice": {
          "type": "integer",
          "format": "int32"
        },
        "servicepolicy": {
          "type": "integer",
          "format": "int32"
        },
        "privatesubnet": {
          "type": "integer",
          "format": "int32"
        },
        "publicip": {
          "type": "integer",
          "format": "int32"
        },
        "instance": {
          "type": "integer",
          "format": "int32"
        },
        "bigdatasnapshot": {
          "type": "integer",
          "format": "int32"
        },
        "resourceaccesslist": {
          "type": "integer",
          "format": "int32"
        },
        "servicealarm": {
          "type": "integer",
          "format": "int32"
        },
        "resourceaccesslistrule": {
          "type": "integer",
          "format": "int32"
        },
        "instancereservation": {
          "type": "integer",
          "format": "int32"
        },
        "storagecontainer": {
          "type": "integer",
          "format": "int32"
        },
        "volume": {
          "type": "integer",
          "format": "int32"
        },
        "internetgateway": {
          "type": "integer",
          "format": "int32"
        },
        "bigdatainstance": {
          "type": "integer",
          "format": "int32"
        },
        "dbinstance": {
          "type": "integer",
          "format": "int32"
        },
        "privatenetwork": {
          "type": "integer",
          "format": "int32"
        },
        "mcinstance": {
          "type": "integer",
          "format": "int32"
        },
        "dbsnapshot": {
          "type": "integer",
          "format": "int32"
        },
        "hypervisor": {
          "type": "integer",
          "format": "int32"
        },
        "routetable": {
          "type": "integer",
          "format": "int32"
        },
        "privateimage": {
          "type": "integer",
          "format": "int32"
        },
        "dnszone": {
          "type": "integer",
          "format": "int32"
        },
        "snapshot": {
          "type": "integer",
          "format": "int32"
        },
        "serviceregion": {
          "type": "integer",
          "format": "int32"
        },
        "apiaccountingconfig": {
          "type": "integer",
          "format": "int32"
        },
        "sshkeypair": {
          "type": "integer",
          "format": "int32"
        },
        "loadbalancer": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "serviceaccesskey",
        "serviceencryptionkey",
        "servicecertificate",
        "servicerole",
        "networkpeer",
        "networkinterface",
        "mcsnapshot",
        "serviceuser",
        "servicegroup",
        "networkflowlog",
        "divvyorganizationservice",
        "servicepolicy",
        "privatesubnet",
        "publicip",
        "instance",
        "bigdatasnapshot",
        "resourceaccesslist",
        "servicealarm",
        "resourceaccesslistrule",
        "instancereservation",
        "storagecontainer",
        "volume",
        "internetgateway",
        "bigdatainstance",
        "dbinstance",
        "privatenetwork",
        "mcinstance",
        "dbsnapshot",
        "hypervisor",
        "routetable",
        "privateimage",
        "dnszone",
        "snapshot",
        "serviceregion",
        "apiaccountingconfig",
        "sshkeypair",
        "loadbalancer"
      ]
    },
    "QueryResourceRequest": {
      "title": "QueryResourceRequest",
      "example": {
        "scopes": [],
        "filters": [],
        "offset": 0,
        "limit": 25,
        "order_by": "",
        "selected_resource_type": ""
      },
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "order_by": {
          "type": "string"
        },
        "selected_resource_type": {
          "type": "string"
        }
      },
      "required": [
        "scopes",
        "filters",
        "offset",
        "limit",
        "order_by",
        "selected_resource_type"
      ]
    },
    "QueryResource": {
      "title": "QueryResource",
      "example": {
        "scopes": [],
        "limit": 25,
        "filters": [],
        "offset": 0,
        "order_by": "",
        "counts": {
          "serviceaccesskey": 34,
          "serviceencryptionkey": 0,
          "servicecertificate": 4,
          "servicerole": 29,
          "networkpeer": 1,
          "networkinterface": 143,
          "mcsnapshot": 0,
          "serviceuser": 32,
          "servicegroup": 4,
          "networkflowlog": 8,
          "divvyorganizationservice": 6,
          "servicepolicy": 907,
          "privatesubnet": 186,
          "publicip": 34,
          "instance": 67,
          "bigdatasnapshot": 9,
          "resourceaccesslist": 292,
          "servicealarm": 2,
          "resourceaccesslistrule": 785,
          "instancereservation": 0,
          "storagecontainer": 54,
          "volume": 101,
          "internetgateway": 54,
          "bigdatainstance": 2,
          "dbinstance": 16,
          "privatenetwork": 73,
          "mcinstance": 3,
          "dbsnapshot": 135,
          "hypervisor": 0,
          "routetable": 78,
          "privateimage": 106,
          "dnszone": 5,
          "snapshot": 160,
          "serviceregion": 92,
          "apiaccountingconfig": 3,
          "sshkeypair": 55,
          "loadbalancer": 10
        },
        "selected_resource_type": "instance",
        "resources": [
          {
            "instance": {
              "instance_type": "t2.micro",
              "root_device_type": "ebs",
              "public_ip_address": "52.000.000.000",
              "image_id": "ami-6f198a0c",
              "launch_time": "2017-10-06T12:09:54Z",
              "instance_id": "i-032075dc437488806",
              "platform": "linux",
              "state": "running",
              "tenancy": "default",
              "common": {
                "account": "Chef",
                "resource_name": "Singapore",
                "organization_service_id": 15,
                "availability_zone": "ap-southeast-1b",
                "region": "ap-southeast-1",
                "resource_id": "instance:15:ap-southeast-1:i-i-032075dc437488806:",
                "cloud": "AWS",
                "resource_type": "instance"
              },
              "private_ip_address": "172.00.0.000"
            },
            "resource_type": "instance"
          }
        ],
        "supported_types": [
          "instance",
          "volume",
          "snapshot",
          "serviceuser",
          "servicegroup",
          "servicerole",
          "servicepolicy",
          "servicecertificate",
          "bigdatainstance",
          "dbinstance",
          "internetgateway",
          "mcinstance",
          "resourceaccesslist",
          "resourceaccesslistrule",
          "storagecontainer",
          "privateimage",
          "privatenetwork",
          "privatesubnet",
          "networkflowlog",
          "networkinterface",
          "networkpeer",
          "publicip",
          "loadbalancer",
          "instancereservation",
          "dbsnapshot",
          "mcsnapshot",
          "bigdatasnapshot",
          "routetable",
          "hypervisor",
          "apiaccountingconfig",
          "serviceaccesskey",
          "serviceencryptionkey",
          "divvyorganizationservice",
          "servicealarm",
          "serviceregion",
          "sshkeypair",
          "dnszone"
        ]
      },
      "type": "object",
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "order_by": {
          "type": "string"
        },
        "counts": {
          "$ref": "#/definitions/Counts1"
        },
        "selected_resource_type": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        },
        "supported_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "scopes",
        "limit",
        "filters",
        "offset",
        "order_by",
        "counts",
        "selected_resource_type",
        "resources",
        "supported_types"
      ]
    },
    "Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "instance": {
          "$ref": "#/definitions/Instance1"
        },
        "resource_type": {
          "example": "instance",
          "type": "string"
        }
      },
      "required": [
        "instance",
        "resource_type"
      ]
    },
    "Instance1": {
      "title": "Instance1",
      "example": {
        "instance_type": "t2.micro",
        "root_device_type": "ebs",
        "public_ip_address": "52.000.000.000",
        "image_id": "ami-6f198a0c",
        "launch_time": "2017-10-06T12:09:54Z",
        "instance_id": "i-032075dc437488806",
        "platform": "linux",
        "state": "running",
        "tenancy": "default",
        "common": {
          "account": "Chef",
          "resource_name": "Singapore",
          "organization_service_id": 15,
          "availability_zone": "ap-southeast-1b",
          "region": "ap-southeast-1",
          "resource_id": "instance:15:ap-southeast-1:i-i-032075dc437488806:",
          "cloud": "AWS",
          "resource_type": "instance"
        },
        "private_ip_address": "172.00.0.000"
      },
      "type": "object",
      "properties": {
        "instance_type": {
          "example": "t2.micro",
          "type": "string"
        },
        "root_device_type": {
          "example": "ebs",
          "type": "string"
        },
        "public_ip_address": {
          "example": "52.000.000.000",
          "type": "string"
        },
        "image_id": {
          "example": "ami-6f198a0c",
          "type": "string"
        },
        "launch_time": {
          "example": "2017-10-06T12:09:54Z",
          "type": "string"
        },
        "instance_id": {
          "example": "i-032075dc437488806",
          "type": "string"
        },
        "platform": {
          "example": "linux",
          "type": "string"
        },
        "state": {
          "example": "running",
          "type": "string"
        },
        "tenancy": {
          "example": "default",
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/Common8"
        },
        "private_ip_address": {
          "example": "172.00.0.000",
          "type": "string"
        }
      },
      "required": [
        "instance_type",
        "root_device_type",
        "public_ip_address",
        "image_id",
        "launch_time",
        "instance_id",
        "platform",
        "state",
        "tenancy",
        "common",
        "private_ip_address"
      ]
    },
    "Common8": {
      "title": "Common8",
      "example": {
        "account": "Chef",
        "resource_name": "Singapore",
        "organization_service_id": 15,
        "availability_zone": "ap-southeast-1b",
        "region": "ap-southeast-1",
        "resource_id": "instance:15:ap-southeast-1:i-i-032075dc437488806:",
        "cloud": "AWS",
        "resource_type": "instance"
      },
      "type": "object",
      "properties": {
        "account": {
          "example": "Chef",
          "type": "string"
        },
        "resource_name": {
          "example": "Singapore",
          "type": "string"
        },
        "organization_service_id": {
          "example": 15,
          "type": "integer",
          "format": "int32"
        },
        "availability_zone": {
          "example": "ap-southeast-1b",
          "type": "string"
        },
        "region": {
          "example": "ap-southeast-1",
          "type": "string"
        },
        "resource_id": {
          "example": "instance:15:ap-southeast-1:i-i-032075dc437488806:",
          "type": "string"
        },
        "cloud": {
          "example": "AWS",
          "type": "string"
        },
        "resource_type": {
          "example": "instance",
          "type": "string"
        }
      },
      "required": [
        "account",
        "resource_name",
        "organization_service_id",
        "availability_zone",
        "region",
        "resource_id",
        "cloud",
        "resource_type"
      ]
    },
    "CreateRoleRequest": {
      "title": "CreateRoleRequest",
      "example": {
        "name": "Test Role",
        "description": "Role defines permissions to scopes",
        "all_permissions": false,
        "view": true,
        "provision": false,
        "manage": false,
        "delete": false,
        "global_scope": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "all_permissions": {
          "type": "boolean"
        },
        "view": {
          "type": "boolean"
        },
        "provision": {
          "type": "boolean"
        },
        "manage": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "global_scope": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "description",
        "all_permissions",
        "view",
        "provision",
        "manage",
        "delete",
        "global_scope"
      ]
    },
    "CreateRole": {
      "title": "CreateRole",
      "example": {
        "description": "Role defines permissions to scopes",
        "resource_id": "divvyrole:1:9",
        "manage": false,
        "cloud_scopes": [],
        "view": true,
        "groups": [],
        "all_permissions": false,
        "global_scope": false,
        "delete": false,
        "provision": false,
        "resource_group_scopes": [],
        "name": "Test Role"
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "manage": {
          "type": "boolean"
        },
        "cloud_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_permissions": {
          "type": "boolean"
        },
        "global_scope": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "provision": {
          "type": "boolean"
        },
        "resource_group_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "resource_id",
        "manage",
        "cloud_scopes",
        "view",
        "groups",
        "all_permissions",
        "global_scope",
        "delete",
        "provision",
        "resource_group_scopes",
        "name"
      ]
    },
    "UpdateRoleRequest": {
      "title": "UpdateRoleRequest",
      "example": {
        "name": "Test Role",
        "description": "Role defines permissions to scopes",
        "all_permissions": true,
        "view": false,
        "provision": false,
        "manage": false,
        "delete": false,
        "global_scope": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "all_permissions": {
          "type": "boolean"
        },
        "view": {
          "type": "boolean"
        },
        "provision": {
          "type": "boolean"
        },
        "manage": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "global_scope": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "description",
        "all_permissions",
        "view",
        "provision",
        "manage",
        "delete",
        "global_scope"
      ]
    },
    "UpdateRole": {
      "title": "UpdateRole",
      "example": {
        "description": "Role defines permissions to scopes",
        "resource_id": "divvyrole:1:9",
        "manage": false,
        "cloud_scopes": [],
        "view": false,
        "groups": [],
        "all_permissions": true,
        "global_scope": false,
        "delete": false,
        "provision": false,
        "resource_group_scopes": [],
        "name": "Test Role"
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "manage": {
          "type": "boolean"
        },
        "cloud_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_permissions": {
          "type": "boolean"
        },
        "global_scope": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "provision": {
          "type": "boolean"
        },
        "resource_group_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "resource_id",
        "manage",
        "cloud_scopes",
        "view",
        "groups",
        "all_permissions",
        "global_scope",
        "delete",
        "provision",
        "resource_group_scopes",
        "name"
      ]
    },
    "ListRoles": {
      "title": "ListRoles",
      "example": {
        "roles": [
          {
            "description": "Basic user role.",
            "resource_id": "divvyrole:1:5",
            "manage": true,
            "cloud_scopes": [
              "divvyorganizationservice:2",
              "divvyorganizationservice:3"
            ],
            "view": true,
            "groups": [
              "divvyusergroup:5",
              "divvyusergroup:10"
            ],
            "all_permissions": false,
            "global_scope": false,
            "delete": false,
            "provision": true,
            "resource_group_scopes": [
              "resourcegroup:2:"
            ],
            "name": "basicRole"
          },
          {
            "description": "Role defines permissions to scopes",
            "resource_id": "divvyrole:1:9",
            "manage": false,
            "cloud_scopes": [],
            "view": false,
            "groups": [],
            "all_permissions": true,
            "global_scope": false,
            "delete": false,
            "provision": false,
            "resource_group_scopes": [],
            "name": "Test Role"
          }
        ]
      },
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      },
      "required": [
        "roles"
      ]
    },
    "Role": {
      "title": "Role",
      "example": {
        "description": "This is a basic user role. Limited priveleges.",
        "resource_id": "divvyrole:1:5",
        "manage": true,
        "cloud_scopes": [
          "divvyorganizationservice:2",
          "divvyorganizationservice:3"
        ],
        "view": true,
        "groups": [
          "divvyusergroup:5"
        ],
        "all_permissions": false,
        "global_scope": false,
        "delete": false,
        "provision": true,
        "resource_group_scopes": [
          "resourcegroup:2:"
        ],
        "name": "basicRole"
      },
      "type": "object",
      "properties": {
        "description": {
          "example": "Basic user role.",
          "type": "string"
        },
        "resource_id": {
          "example": "divvyrole:1:5",
          "type": "string"
        },
        "manage": {
          "example": true,
          "type": "boolean"
        },
        "cloud_scopes": {
          "example": [
            "divvyorganizationservice:2",
            "divvyorganizationservice:3"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view": {
          "example": true,
          "type": "boolean"
        },
        "groups": {
          "example": [
            "divvyusergroup:5",
            "divvyusergroup:10"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_permissions": {
          "example": false,
          "type": "boolean"
        },
        "global_scope": {
          "example": false,
          "type": "boolean"
        },
        "delete": {
          "example": false,
          "type": "boolean"
        },
        "provision": {
          "example": true,
          "type": "boolean"
        },
        "resource_group_scopes": {
          "example": [
            "resourcegroup:2:"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "example": "basicRole",
          "type": "string"
        }
      },
      "required": [
        "description",
        "resource_id",
        "manage",
        "cloud_scopes",
        "view",
        "groups",
        "all_permissions",
        "global_scope",
        "delete",
        "provision",
        "resource_group_scopes",
        "name"
      ]
    },
    "UpdateRoleScope;Clouds&ResourceGroupsRequest": {
      "title": "UpdateRoleScope;Clouds&ResourceGroupsRequest",
      "example": {
        "resource_ids": [],
        "deprecated_resource_ids": []
      },
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deprecated_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_ids",
        "deprecated_resource_ids"
      ]
    },
    "UpdateRole'sUserGroupsRequest": {
      "title": "UpdateRole'sUserGroupsRequest",
      "example": {
        "group_resource_ids": [
          "divvyusergroup:10"
        ]
      },
      "type": "object",
      "properties": {
        "group_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "group_resource_ids"
      ]
    },
    "UpdateRole'sUserGroups": {
      "title": "UpdateRole'sUserGroups",
      "example": {
        "description": "Role defines permissions to scopes",
        "resource_id": "divvyrole:1:9",
        "manage": false,
        "cloud_scopes": [],
        "view": false,
        "groups": [
          "divvyusergroup:10"
        ],
        "all_permissions": true,
        "global_scope": false,
        "delete": false,
        "provision": false,
        "resource_group_scopes": [],
        "name": "Test Role"
      },
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "manage": {
          "type": "boolean"
        },
        "cloud_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "view": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "all_permissions": {
          "type": "boolean"
        },
        "global_scope": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "provision": {
          "type": "boolean"
        },
        "resource_group_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "description",
        "resource_id",
        "manage",
        "cloud_scopes",
        "view",
        "groups",
        "all_permissions",
        "global_scope",
        "delete",
        "provision",
        "resource_group_scopes",
        "name"
      ]
    },
    "ListGroups": {
      "title": "ListGroups",
      "example": {
        "groups": [
          {
            "resource_id": "divvyusergroup:5",
            "group_id": 5,
            "users": [
              {
                "username": "kobe",
                "two_factor_enabled": false,
                "user_id": 4,
                "name": "Kobe B",
                "resource_id": "divvyuser:4:",
                "two_factor_required": false,
                "organization_name": "Default Organization",
                "domain_admin": false,
                "email_address": "kobe@divvycloud.com",
                "organization_admin": false
              }
            ],
            "roles": [
              {
                "description": "This is a basic user role. Limited priveleges.",
                "resource_id": "divvyrole:1:5",
                "manage": true,
                "cloud_scopes": [
                  "divvyorganizationservice:2",
                  "divvyorganizationservice:3"
                ],
                "view": true,
                "groups": [
                  "divvyusergroup:5"
                ],
                "all_permissions": false,
                "global_scope": false,
                "delete": false,
                "provision": true,
                "resource_group_scopes": [
                  "resourcegroup:2:"
                ],
                "name": "basicRole"
              }
            ],
            "name": "BasicUsers"
          }
        ]
      },
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "required": [
        "groups"
      ]
    },
    "Group": {
      "title": "Group",
      "type": "object",
      "properties": {
        "resource_id": {
          "example": "divvyusergroup:5",
          "type": "string"
        },
        "group_id": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "example": [
            {
              "username": "kobe",
              "two_factor_enabled": false,
              "user_id": 4,
              "name": "Kobe B",
              "resource_id": "divvyuser:4:",
              "two_factor_required": false,
              "organization_name": "Default Organization",
              "domain_admin": false,
              "email_address": "kobe@divvycloud.com",
              "organization_admin": false
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "roles": {
          "example": [
            {
              "description": "This is a basic user role. Limited priveleges.",
              "resource_id": "divvyrole:1:5",
              "manage": true,
              "cloud_scopes": [
                "divvyorganizationservice:2",
                "divvyorganizationservice:3"
              ],
              "view": true,
              "groups": [
                "divvyusergroup:5"
              ],
              "all_permissions": false,
              "global_scope": false,
              "delete": false,
              "provision": true,
              "resource_group_scopes": [
                "resourcegroup:2:"
              ],
              "name": "basicRole"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "name": {
          "example": "BasicUsers",
          "type": "string"
        }
      },
      "required": [
        "resource_id",
        "group_id",
        "users",
        "roles",
        "name"
      ]
    },
    "User": {
      "title": "User",
      "example": {
        "username": "kobe",
        "two_factor_enabled": false,
        "user_id": 4,
        "name": "Kobe B",
        "resource_id": "divvyuser:4:",
        "two_factor_required": false,
        "organization_name": "Default Organization",
        "domain_admin": false,
        "email_address": "kobe@divvycloud.com",
        "organization_admin": false
      },
      "type": "object",
      "properties": {
        "username": {
          "example": "kobe",
          "type": "string"
        },
        "two_factor_enabled": {
          "example": false,
          "type": "boolean"
        },
        "user_id": {
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "example": "Kobe B",
          "type": "string"
        },
        "resource_id": {
          "example": "divvyuser:4:",
          "type": "string"
        },
        "two_factor_required": {
          "example": false,
          "type": "boolean"
        },
        "organization_name": {
          "example": "Default Organization",
          "type": "string"
        },
        "domain_admin": {
          "example": false,
          "type": "boolean"
        },
        "email_address": {
          "example": "kobe@divvycloud.com",
          "type": "string"
        },
        "organization_admin": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "two_factor_enabled",
        "user_id",
        "name",
        "resource_id",
        "two_factor_required",
        "organization_name",
        "domain_admin",
        "email_address",
        "organization_admin"
      ]
    },
    "CreateGroupRequest": {
      "title": "CreateGroupRequest",
      "example": {
        "group_name": "Test UserGroup"
      },
      "type": "object",
      "properties": {
        "group_name": {
          "type": "string"
        }
      },
      "required": [
        "group_name"
      ]
    },
    "CreateGroup": {
      "title": "CreateGroup",
      "example": {
        "group": {
          "resource_id": "divvyusergroup:9",
          "group_id": 9,
          "users": [],
          "roles": [],
          "name": "Test UserGroup"
        }
      },
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Group1"
        }
      },
      "required": [
        "group"
      ]
    },
    "Group1": {
      "title": "Group1",
      "type": "object",
      "properties": {
        "resource_id": {
          "type": "string"
        },
        "group_id": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "resource_id",
        "group_id",
        "users",
        "roles",
        "name"
      ]
    },
    "AddGroupUsersRequest": {
      "title": "AddGroupUsersRequest",
      "example": {
        "user_resource_ids": [
          "divvyuser:6:"
        ]
      },
      "type": "object",
      "properties": {
        "user_resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "user_resource_ids"
      ]
    },
    "AddGroupUsers": {
      "title": "AddGroupUsers",
      "example": {
        "group": {
          "resource_id": "divvyusergroup:10",
          "group_id": 10,
          "users": [
            {
              "username": "chefec2",
              "two_factor_enabled": false,
              "user_id": 6,
              "name": "Chef Estrada",
              "resource_id": "divvyuser:6:",
              "two_factor_required": false,
              "organization_name": "Default Organization",
              "domain_admin": false,
              "email_address": "chef.ec2@divvycloud.com",
              "organization_admin": true
            }
          ],
          "roles": [],
          "name": "Test UserGroup"
        }
      },
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Group2"
        }
      },
      "required": [
        "group"
      ]
    },
    "Group2": {
      "title": "Group2",
      "type": "object",
      "properties": {
        "resource_id": {
          "type": "string"
        },
        "group_id": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "resource_id",
        "group_id",
        "users",
        "roles",
        "name"
      ]
    },
    "RemoveUserfromGroupRequest": {
      "title": "RemoveUserfromGroupRequest",
      "example": {
        "user_resource_id": "divvyuser:6:"
      },
      "type": "object",
      "properties": {
        "user_resource_id": {
          "type": "string"
        }
      },
      "required": [
        "user_resource_id"
      ]
    },
    "RemoveUserfromGroup": {
      "title": "RemoveUserfromGroup",
      "example": {
        "group": {
          "resource_id": "divvyusergroup:10",
          "group_id": 10,
          "users": [],
          "roles": [],
          "name": "Test UserGroup"
        }
      },
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Group1"
        }
      },
      "required": [
        "group"
      ]
    },
    "ListUsersinUserGroup": {
      "title": "ListUsersinUserGroup",
      "example": {
        "users": [
          {
            "username": "chefec2",
            "two_factor_enabled": false,
            "user_id": 6,
            "name": "Chef Estrada",
            "resource_id": "divvyuser:6:",
            "two_factor_required": false,
            "organization_name": "Default Organization",
            "domain_admin": false,
            "email_address": "chef.ec2@divvycloud.com",
            "organization_admin": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "required": [
        "users"
      ]
    },
    "ListRolesinUserGroup": {
      "title": "ListRolesinUserGroup",
      "example": {
        "roles": []
      },
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "roles"
      ]
    },
    "UpdateRolesinUserGroupRequest": {
      "title": "UpdateRolesinUserGroupRequest",
      "example": {
        "resource_ids": [
          "divvyrole:1:5"
        ]
      },
      "type": "object",
      "properties": {
        "resource_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "resource_ids"
      ]
    },
    "UpdateRolesinUserGroup": {
      "title": "UpdateRolesinUserGroup",
      "example": {
        "group": {
          "resource_id": "divvyusergroup:10",
          "group_id": 10,
          "users": [
            {
              "username": "chefec2",
              "two_factor_enabled": false,
              "user_id": 6,
              "name": "Chef Estrada",
              "resource_id": "divvyuser:6:",
              "two_factor_required": false,
              "organization_name": "Default Organization",
              "domain_admin": false,
              "email_address": "chef.ec2@divvycloud.com",
              "organization_admin": true
            }
          ],
          "roles": [
            {
              "description": "Basic User priveleges.",
              "resource_id": "divvyrole:1:5",
              "manage": true,
              "cloud_scopes": [
                "divvyorganizationservice:2",
                "divvyorganizationservice:3"
              ],
              "view": true,
              "groups": [
                "divvyusergroup:5",
                "divvyusergroup:10"
              ],
              "all_permissions": false,
              "global_scope": false,
              "delete": false,
              "provision": true,
              "resource_group_scopes": [
                "resourcegroup:2:"
              ],
              "name": "basicRole"
            }
          ],
          "name": "Test UserGroup"
        }
      },
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/Group"
        }
      },
      "required": [
        "group"
      ]
    },
    "LoginRequest": {
      "title": "LoginRequest",
      "example": {
        "username": "{{divvy_username}}",
        "password": "{{divvy_password}}"
      },
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "UserInfo": {
      "title": "UserInfo",
      "example": {
        "username": "janedoe",
        "two_factor_enabled": false,
        "user_id": 1,
        "name": "Jane Doe",
        "resource_id": "divvyuser:1:",
        "two_factor_required": false,
        "organization_name": "Default Organization",
        "domain_admin": true,
        "email_address": "jane.doe@divvycloud.com",
        "auth_plugin_exists": false,
        "organization_admin": false
      },
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "two_factor_enabled": {
          "type": "boolean"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "resource_id": {
          "type": "string"
        },
        "two_factor_required": {
          "type": "boolean"
        },
        "organization_name": {
          "type": "string"
        },
        "domain_admin": {
          "type": "boolean"
        },
        "email_address": {
          "type": "string"
        },
        "auth_plugin_exists": {
          "type": "boolean"
        },
        "organization_admin": {
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "two_factor_enabled",
        "user_id",
        "name",
        "resource_id",
        "two_factor_required",
        "organization_name",
        "domain_admin",
        "email_address",
        "auth_plugin_exists",
        "organization_admin"
      ]
    },
    "UsersList": {
      "title": "UsersList",
      "example": {
        "users": [
          {
            "username": "jamman",
            "two_factor_enabled": false,
            "user_id": 2,
            "name": "James Madison",
            "resource_id": "divvyuser:2:",
            "two_factor_required": false,
            "organization_name": "Default Organization",
            "domain_admin": false,
            "groups": 0,
            "email_address": "jamman@divvycloud.com",
            "owned_resources": 4,
            "organization_admin": false
          },
          {
            "username": "benfrank",
            "two_factor_enabled": false,
            "user_id": 3,
            "name": "Benjamin Franklin",
            "resource_id": "divvyuser:3:",
            "two_factor_required": false,
            "organization_name": "Default Organization",
            "domain_admin": false,
            "groups": 0,
            "email_address": "benfrank@divvycloud.com",
            "owned_resources": 0,
            "organization_admin": false
          },
          {
            "username": "kobe",
            "two_factor_enabled": false,
            "user_id": 4,
            "name": "Kobe B",
            "resource_id": "divvyuser:4:",
            "two_factor_required": false,
            "organization_name": "Default Organization",
            "domain_admin": false,
            "groups": 1,
            "email_address": "kobe@divvycloud.com",
            "owned_resources": 0,
            "organization_admin": false
          },
          {
            "username": "chefec2",
            "two_factor_enabled": false,
            "user_id": 6,
            "name": "Chef Champ",
            "resource_id": "divvyuser:6:",
            "two_factor_required": false,
            "organization_name": "Default Organization",
            "domain_admin": false,
            "groups": 0,
            "email_address": "chef@divvycloud.com",
            "owned_resources": 0,
            "organization_admin": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User4"
          }
        }
      },
      "required": [
        "users"
      ]
    },
    "User4": {
      "title": "User4",
      "type": "object",
      "properties": {
        "username": {
          "example": "jamman",
          "type": "string"
        },
        "two_factor_enabled": {
          "example": false,
          "type": "boolean"
        },
        "user_id": {
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "example": "James Madison",
          "type": "string"
        },
        "resource_id": {
          "example": "divvyuser:2:",
          "type": "string"
        },
        "two_factor_required": {
          "example": false,
          "type": "boolean"
        },
        "organization_name": {
          "example": "Default Organization",
          "type": "string"
        },
        "domain_admin": {
          "example": false,
          "type": "boolean"
        },
        "groups": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "email_address": {
          "example": "jamman@divvycloud.com",
          "type": "string"
        },
        "owned_resources": {
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "organization_admin": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "two_factor_enabled",
        "user_id",
        "name",
        "resource_id",
        "two_factor_required",
        "organization_name",
        "domain_admin",
        "groups",
        "email_address",
        "owned_resources",
        "organization_admin"
      ]
    },
    "CreateUser-PublicRequest": {
      "title": "CreateUser-PublicRequest",
      "example": {
        "name": "Boaty McBoatFace",
        "email": "boat@boatface.com",
        "username": "Boatface",
        "password": "password",
        "confirm_password": "password",
        "access_level": "BASIC_USER",
        "two_factor_required": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirm_password": {
          "type": "string"
        },
        "access_level": {
          "type": "string"
        },
        "two_factor_required": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "email",
        "username",
        "password",
        "confirm_password",
        "access_level",
        "two_factor_required"
      ]
    },
    "CreaterUser-SAMLRequest": {
      "title": "CreaterUser-SAMLRequest",
      "example": {
        "authentication_type": "saml",
        "access_level": "BASIC_USER",
        "username": "Boatface",
        "authentication_server_id": 1,
        "name": "Boaty McBoatFace",
        "email": "boat@boatface.com"
      },
      "type": "object",
      "properties": {
        "authentication_type": {
          "type": "string"
        },
        "access_level": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "authentication_server_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "required": [
        "authentication_type",
        "access_level",
        "username",
        "authentication_server_id",
        "name",
        "email"
      ]
    },
    "2FAstatusSession-PublicRequest": {
      "title": "2FAstatusSession-PublicRequest",
      "example": {
        "user_id": 6
      },
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "2FAStats": {
      "title": "2FAStats",
      "example": {
        "required": false,
        "enabled": false
      },
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "required",
        "enabled"
      ]
    },
    "Enable2FA": {
      "title": "Enable2FA",
      "example": {
        "otp_secret": "XNAY6CSZ2WIV3W6F"
      },
      "type": "object",
      "properties": {
        "otp_secret": {
          "type": "string"
        }
      },
      "required": [
        "otp_secret"
      ]
    },
    "Disable2FA": {
      "title": "Disable2FA",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    },
    "2FADisablebyuser_id-PublicRequest": {
      "title": "2FADisablebyuser_id-PublicRequest",
      "example": {
        "user_id": 1
      },
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "AttachVolumeRequest": {
      "title": "AttachVolumeRequest",
      "example": {
        "instance_resource_id": "{{instance_resource_id}}",
        "instance_mount_point": "/dev/sdf"
      },
      "type": "object",
      "properties": {
        "instance_resource_id": {
          "type": "string"
        },
        "instance_mount_point": {
          "type": "string"
        }
      },
      "required": [
        "instance_resource_id",
        "instance_mount_point"
      ]
    },
    "CreateSnapshotRequest": {
      "title": "CreateSnapshotRequest",
      "example": {
        "name": "Example Snapshot"
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "ModifyVolumeRequest": {
      "title": "ModifyVolumeRequest",
      "example": {
        "iops": 1,
        "size": 4,
        "volume_type": "io1"
      },
      "type": "object",
      "properties": {
        "iops": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "volume_type": {
          "type": "string"
        }
      },
      "required": [
        "iops",
        "size",
        "volume_type"
      ]
    }
  },
  "tags": [
    {
      "name": "Add Cloud Account",
      "description": "Adding a cloud account. "
    },
    {
      "name": "Add User"
    },
    {
      "name": "Create Insights"
    },
    {
      "name": "AutoScaling Groups",
      "description": "Automatically scale up or down instances with user defined policies."
    },
    {
      "name": "Badges",
      "description": "Badges provide a way to assign additional metadata about resources within the DivvyCloud platform. They are key/value pairs which can be used for filtering and identifying resources from parent cloud account. "
    },
    {
      "name": "Botfactory",
      "description": "BotFactory is DivvyCloud’s answer to easy policy automation. The user is able to select from a list of predefined filters, which match resources, and actions, which act upon those resources. If the predefined filters and actions aren’t sufficient for a user’s needs, it’s possible to create new filters and actions that provide the needed functionality.\n\nComponents: scope, filters, and actions\n\nBotFactory contains several components which comprise the system. They are scope, filters, actions, and when the bot should run.\n\nScope\n\nScope selects which cloud accounts bots should operate on. For managing multiple cloud accounts or if your list of accounts may change regularly, bots can be created to apply to all accounts with a Badge.\n\nFilters\n\nFilters specify what a bot should act upon. For example, a filter may match each resource based on tags that it does or does not have or it may match based on ports that are or are not open. There are numerous filters included with BotFactory and it is possible for a programmer to define her own.\n\nActions\n\nActions specify what a bot does. For example, an action may delete a resource, it may start or stop an instance, or it may send an email containing information about the evaluated resource. Actions are executed for a single resource at a time. When a bot possesses multiple actions, the actions are executed in order. There are numerous actions included with BotFactory. As with filters, it is possible for a programmer to define her own actions."
    },
    {
      "name": "Cache Instances",
      "description": "Cache instances are managed systems with one or more caching technologies installed (eg: Redis)."
    },
    {
      "name": "Clouds",
      "description": "Cloud accounts. "
    },
    {
      "name": "DNS Zones",
      "description": "DNS Zones are portions within the global Domain Name Sysem."
    },
    {
      "name": "Event Driven Harvesting"
    },
    {
      "name": "Identity Management",
      "description": "Identity Management provides an interface for managing admins, users and permissions.\n\nThe hierarchy of management can be understood as: Installation > Domains > Organizations > Groups/Roles/Users."
    },
    {
      "name": "Insights"
    },
    {
      "name": "Instances",
      "description": "Compute Instances are virtual private servers. Examples of this would be AWS EC2 and Azure Virtual Machines."
    },
    {
      "name": "Networks",
      "description": "Virtual networks."
    },
    {
      "name": "Organizations",
      "description": "Organizations are isolated environments that contain cloud accounts, users and bots."
    },
    {
      "name": "Resource Access Lists",
      "description": "Resource Access Lists are used to protect and ingress/egress traffic to cloud resources. Examples include Security Groups, Network Access Lists and Firewalls. This class inherits from TopLevelResource and has direct access to the resource’s database object."
    },
    {
      "name": "Resource Groups ",
      "description": "Resource Groups API"
    },
    {
      "name": "Resources",
      "description": "Resource functionality"
    },
    {
      "name": "Roles",
      "description": "Roles associate permissions with scope. Scopes are domains around resources in the system such as Clouds accounts, Resource Groups, and key, value attributes called Badges."
    },
    {
      "name": "User Groups - Role Based Access",
      "description": "Collection of Users that can be associated with Roles for the purposes of Role Based Access"
    },
    {
      "name": "Users",
      "description": "Endpoints for User Management"
    },
    {
      "name": "Volumes",
      "description": "A volume is a storage device that you can attach to an instance. "
    },
    {
      "name": "Whitelabel"
    }
  ]
}
