// Code generated by go-swagger; DO NOT EDIT.

package event_driven_harvesting

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams creates a new PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams object
// with the default values initialized.
func NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams() *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	var ()
	return &PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithTimeout creates a new PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithTimeout(timeout time.Duration) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	var ()
	return &PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams{

		timeout: timeout,
	}
}

// NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithContext creates a new PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithContext(ctx context.Context) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	var ()
	return &PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams{

		Context: ctx,
	}
}

// NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithHTTPClient creates a new PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParamsWithHTTPClient(client *http.Client) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	var ()
	return &PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams{
		HTTPClient: client,
	}
}

/*PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams contains all the parameters to send to the API endpoint
for the public cloud eventdrivenharvest disable consumer by organizationid delete operation typically these are written to a http.Request
*/
type PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams struct {

	/*ContentType*/
	ContentType string
	/*XAuthToken*/
	XAuthToken string
	/*Organizationid*/
	Organizationid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithTimeout(timeout time.Duration) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithContext(ctx context.Context) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithHTTPClient(client *http.Client) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentType adds the contentType to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithContentType(contentType string) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetContentType(contentType)
	return o
}

// SetContentType adds the contentType to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetContentType(contentType string) {
	o.ContentType = contentType
}

// WithXAuthToken adds the xAuthToken to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithXAuthToken(xAuthToken string) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetXAuthToken(xAuthToken)
	return o
}

// SetXAuthToken adds the xAuthToken to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetXAuthToken(xAuthToken string) {
	o.XAuthToken = xAuthToken
}

// WithOrganizationid adds the organizationid to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WithOrganizationid(organizationid string) *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams {
	o.SetOrganizationid(organizationid)
	return o
}

// SetOrganizationid adds the organizationid to the public cloud eventdrivenharvest disable consumer by organizationid delete params
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) SetOrganizationid(organizationid string) {
	o.Organizationid = organizationid
}

// WriteToRequest writes these params to a swagger request
func (o *PublicCloudEventdrivenharvestDisableConsumerByOrganizationidDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Content-Type
	if err := r.SetHeaderParam("Content-Type", o.ContentType); err != nil {
		return err
	}

	// header param X-Auth-Token
	if err := r.SetHeaderParam("X-Auth-Token", o.XAuthToken); err != nil {
		return err
	}

	// path param organizationid
	if err := r.SetPathParam("organizationid", o.Organizationid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
