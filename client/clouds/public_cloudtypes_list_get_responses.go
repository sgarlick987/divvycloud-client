// Code generated by go-swagger; DO NOT EDIT.

package clouds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/sgarlick987/godivvycloud/models"
)

// PublicCloudtypesListGetReader is a Reader for the PublicCloudtypesListGet structure.
type PublicCloudtypesListGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicCloudtypesListGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPublicCloudtypesListGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPublicCloudtypesListGetOK creates a PublicCloudtypesListGetOK with default headers values
func NewPublicCloudtypesListGetOK() *PublicCloudtypesListGetOK {
	return &PublicCloudtypesListGetOK{
		AccessControlAllowHeaders: "Origin, X-Requested-With, Content-Type, Accept",
		AccessControlAllowMethods: "POST, GET, OPTIONS",
		AccessControlAllowOrigin:  "*",
		CacheControl:              "private, no-cache, no-store, no-transform, must-revalidate, max-age=0",
		ContentEncoding:           "gzip",
		ContentLength:             "298",
		ContentType:               "application/json",
		Date:                      "Wed, 25 Oct 2017 14:13:39 GMT",
		LastModified:              "2017-10-25 10:13:39.237937",
		Server:                    "waitress",
		Vary:                      "Accept-Encoding",
	}
}

/*PublicCloudtypesListGetOK handles this case with default header values.

PublicCloudtypesListGetOK public cloudtypes list get o k
*/
type PublicCloudtypesListGetOK struct {
	AccessControlAllowHeaders string

	AccessControlAllowMethods string

	AccessControlAllowOrigin string

	CacheControl string

	ContentEncoding string

	ContentLength string

	ContentType string

	Date string

	LastModified string

	Server string

	Vary string

	Payload *models.ListCloudTypes
}

func (o *PublicCloudtypesListGetOK) Error() string {
	return fmt.Sprintf("[GET /public/cloudtypes/list][%d] publicCloudtypesListGetOK  %+v", 200, o.Payload)
}

func (o *PublicCloudtypesListGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header access-control-allow-headers
	o.AccessControlAllowHeaders = response.GetHeader("access-control-allow-headers")

	// response header access-control-allow-methods
	o.AccessControlAllowMethods = response.GetHeader("access-control-allow-methods")

	// response header access-control-allow-origin
	o.AccessControlAllowOrigin = response.GetHeader("access-control-allow-origin")

	// response header cache-control
	o.CacheControl = response.GetHeader("cache-control")

	// response header content-encoding
	o.ContentEncoding = response.GetHeader("content-encoding")

	// response header content-length
	o.ContentLength = response.GetHeader("content-length")

	// response header content-type
	o.ContentType = response.GetHeader("content-type")

	// response header date
	o.Date = response.GetHeader("date")

	// response header last-modified
	o.LastModified = response.GetHeader("last-modified")

	// response header server
	o.Server = response.GetHeader("server")

	// response header vary
	o.Vary = response.GetHeader("vary")

	o.Payload = new(models.ListCloudTypes)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
