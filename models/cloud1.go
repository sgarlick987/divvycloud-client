// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Cloud1 Cloud1
// swagger:model Cloud1
type Cloud1 struct {

	// cloud type id
	// Required: true
	CloudTypeID *string `json:"cloud_type_id"`

	// creation time
	// Required: true
	CreationTime *string `json:"creation_time"`

	// group resource id
	// Required: true
	GroupResourceID *string `json:"group_resource_id"`

	// id
	// Required: true
	ID *int32 `json:"id"`

	// name
	// Required: true
	Name *string `json:"name"`

	// resource id
	// Required: true
	ResourceID *string `json:"resource_id"`

	// resources
	// Required: true
	Resources *int32 `json:"resources"`

	// status
	// Required: true
	Status *string `json:"status"`
}

// Validate validates this cloud1
func (m *Cloud1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloudTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreationTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroupResourceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResourceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResources(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Cloud1) validateCloudTypeID(formats strfmt.Registry) error {

	if err := validate.Required("cloud_type_id", "body", m.CloudTypeID); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateCreationTime(formats strfmt.Registry) error {

	if err := validate.Required("creation_time", "body", m.CreationTime); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateGroupResourceID(formats strfmt.Registry) error {

	if err := validate.Required("group_resource_id", "body", m.GroupResourceID); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateResourceID(formats strfmt.Registry) error {

	if err := validate.Required("resource_id", "body", m.ResourceID); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateResources(formats strfmt.Registry) error {

	if err := validate.Required("resources", "body", m.Resources); err != nil {
		return err
	}

	return nil
}

func (m *Cloud1) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Cloud1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Cloud1) UnmarshalBinary(b []byte) error {
	var res Cloud1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
